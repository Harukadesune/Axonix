{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/dashboard/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/dashboard/index.vue","mtime":1745308249743},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmfile":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <el-row :gutter=\"20\">\n      <!-- 管理员信息卡片 -->\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"16\" :lg=\"16\">\n        <el-card class=\"admin-card\" :style=\"cardStyle\">\n          <div class=\"admin-profile\">\n            <div class=\"avatar-wrapper\">\n              <svg-icon icon-class=\"user\" class=\"user-icon\" />\n              <div class=\"online-indicator\"></div>\n            </div>\n            <div class=\"admin-meta\">\n              <div class=\"title-group\">\n                <span class=\"admin-badge\">系统管理员</span>\n                <h1 class=\"admin-name\">{{ name }}</h1>\n              </div>\n              <div class=\"time-group\">\n                <div class=\"greeting\">\n                  <span class=\"greeting-icon\">👋</span>\n                  <span class=\"greeting-text\">{{ greetingText }}</span>\n                </div>\n                <div class=\"current-time\">\n                  <span class=\"time-icon\">🕒</span>\n                  <span class=\"time-value\">{{ currentTime }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n        <!-- 通知信息卡片 -->\n        <!-- 修改后的通知信息卡片 -->\n        <el-card class=\"notifications-card\" shadow=\"hover\" style=\"margin-top: 20px;\">\n          <h3>通知信息</h3>\n          <div class=\"notifications-table-wrapper\">\n            <el-table \n              :data=\"notifications\" \n              border \n              style=\"width: 100%\"\n              max-height=\"300\">  <!-- 新增max-height属性 -->\n              <el-table-column \n                prop=\"title\" \n                label=\"通知标题\" \n                align=\"center\">\n                <template #default=\"scope\">\n                  <el-link \n                    type=\"primary\" \n                    @click=\"showNotificationDetails(scope.row)\">\n                    {{ scope.row.title }}\n                  </el-link>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 统计卡片组 -->\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"8\" :lg=\"8\" class=\"stat-cards\">\n        <el-card class=\"stat-card\" shadow=\"hover\">\n          <div class=\"stat-content\">\n            <div class=\"stat-title\"></div>\n            <el-table :data=\"statTableData\" border style=\"width: 100%\">\n              <el-table-column prop=\"label\" label=\"统计项\" align=\"center\"></el-table-column>\n              <el-table-column prop=\"value\" label=\"数量\" align=\"center\"></el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 修改后的图表展示区域 -->\n    <el-row :gutter=\"20\">\n      <el-col :span=\"14\">\n        <el-card shadow=\"hover\">\n          <div id=\"regionChart\" style=\"height: 400px;\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-card shadow=\"hover\">\n          <div id=\"disabilityChart\" style=\"height: 400px;\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 通知详情弹窗 -->\n    <el-dialog \n      title=\"通知详情\" \n      :visible.sync=\"notificationDialogVisible\" \n      width=\"50%\">\n      <p>{{ selectedNotification.content }}</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"notificationDialogVisible = false\">关闭</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n\n<script>\nimport { mapGetters } from 'vuex'\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      currentTime: '',\n      timer: null,\n      stats: {\n        totalUsers: 0,\n        vipUsers: 0,\n        helpinfo: 0,\n        ailog: 0,\n        navlog: 0,\n        postinfo: 0,\n        commentinfo: 0,\n        notifications: 0,\n        sosinfo: 0,\n        feedback: 0\n      },\n      regionChart: null,\n      disabilityChart: null,\n      notifications: [], // 新增通知数据\n      notificationDialogVisible: false, // 控制弹窗显示\n      selectedNotification: {}, // 当前选中的通知\n    }\n  },\n  computed: {\n    ...mapGetters(['name']),\n    greetingText() {\n      const hour = new Date().getHours()\n      if (hour >= 6 && hour < 12) return '早上好，现在是'\n      if (hour >= 12 && hour < 14) return '中午好，现在是'\n      if (hour >= 14 && hour < 18) return '下午好，现在是'\n      return '晚上好，现在是'\n    },\n    cardStyle() {\n      const hour = new Date().getHours()\n      return {\n        backgroundColor: this.getBackgroundColor(hour)\n      }\n    },\n    statTableData() {\n      return [\n        { label: '总用户数', value: this.stats.totalUsers },\n        { label: 'VIP 用户', value: this.stats.vipUsers },\n        { label: '帮助请求', value: this.stats.helpinfo },\n        { label: 'AI 日志', value: this.stats.ailog },\n        { label: '导航日志', value: this.stats.navlog },\n        { label: '论坛帖子', value: this.stats.postinfo },\n        { label: '评论数', value: this.stats.commentinfo },\n        { label: '通知数', value: this.stats.notifications },\n        { label: 'SOS 通知', value: this.stats.sosinfo },\n        { label: '反馈数', value: this.stats.feedback }\n      ]\n    }\n  },\n  methods: {\n    getBackgroundColor(hour) {\n      if (hour >= 6 && hour < 12) return '#67C23A'\n      if (hour >= 12 && hour < 14) return '#E6A23C'\n      if (hour >= 14 && hour < 18) return '#409EFF'\n      return '#909399'\n    },\n    updateTime() {\n      const now = new Date()\n      this.currentTime = now.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    },\n    async fetchStats() {\n      try {\n        const totalRes = await this.$api.user.countUsers()\n        this.stats.totalUsers = totalRes.data\n\n        const vipRes = await this.$api.vip.countVips({})\n        this.stats.vipUsers = vipRes.data\n\n        const helpRes = await this.$api.helpinfo.countHelpRequests({})\n        this.stats.helpinfo = helpRes.data\n\n        const ailogRes = await this.$api.ailog.countAiLogs({})\n        this.stats.ailog = ailogRes.data\n\n        const navlogRes = await this.$api.navlog.countNavLogs({})\n        this.stats.navlog = navlogRes.data\n\n        const postinfoRes = await this.$api.postinfo.countForumPosts({})\n        this.stats.postinfo = postinfoRes.data\n\n        const commentinfoRes = await this.$api.commentinfo.countComments({})\n        this.stats.commentinfo = commentinfoRes.data\n\n        const notificationsRes = await this.$api.notifications.countNotifications({})\n        this.stats.notifications = notificationsRes.data\n\n        const sosinfoRes = await this.$api.sosinfo.countSosNotifications({})\n        this.stats.sosinfo = sosinfoRes.data\n\n        const feedbackRes = await this.$api.feedback.countFeedbacks({})\n        this.stats.feedback = feedbackRes.data\n\n        this.initCharts()\n      } catch (error) {\n        console.error('数据获取失败:', error)\n        this.$message.error('数据加载失败，请稍后重试')\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const example = {};\n        const response = await this.$api.notifications.getNotificationsByExampleWithBLOBs(example);\n        this.notifications = response.data;\n      } catch (error) {\n        console.error('获取通知信息失败:', error);\n        this.$message.error('通知信息加载失败，请稍后重试');\n      }\n    },\n    showNotificationDetails(notification) {\n      this.selectedNotification = notification;\n      this.notificationDialogVisible = true;\n    },\n    initCharts() {\n      this.$nextTick(() => {\n        this.initRegionChart()\n        this.initDisabilityChart()\n      })\n    },\n    async initRegionChart() {\n      try {\n        const res = await this.$api.user.getUsers({\n          fields: ['province']\n        })\n\n        const rawData = Array.isArray(res.data) ? res.data : []\n        const provinceData = this.processProvinceData(rawData)\n        const chartData = Object.entries(provinceData).map(([name, value]) => ({\n          name,\n          value\n        }))\n\n        this.regionChart = echarts.init(document.getElementById('regionChart'))\n        const option = this.getRegionOption(chartData)\n        this.regionChart.setOption(option)\n\n        window.addEventListener('resize', () => this.regionChart.resize())\n      } catch (error) {\n        console.error('地区分布图表加载失败:', error)\n        this.$message.error('地区数据加载失败')\n      }\n    },\n    async initDisabilityChart() {\n      try {\n        const res = await this.$api.user.getUsers({\n          fields: ['disability_type']\n        })\n\n        const rawData = Array.isArray(res.data) ? res.data : []\n        const disabilityData = this.processDisabilityData(rawData)\n        const chartData = Object.entries(disabilityData).map(([name, value]) => ({\n          name,\n          value\n        }))\n\n        this.disabilityChart = echarts.init(document.getElementById('disabilityChart'))\n        const option = this.getDisabilityOption(chartData)\n        this.disabilityChart.setOption(option)\n\n        window.addEventListener('resize', () => this.disabilityChart.resize())\n      } catch (error) {\n        console.error('残障类型图表加载失败:', error)\n        this.$message.error('残障数据加载失败')\n      }\n    },\n    processProvinceData(users) {\n      return users.reduce((acc, user) => {\n        const province = user?.province?.trim() || '未知地区'\n        acc[province] = (acc[province] || 0) + 1\n        return acc\n      }, {})\n    },\n    processDisabilityData(users) {\n      const typeMap = {\n        0: '无障碍',\n        1: '视障',\n        2: '听障',\n        3: '其他障碍'\n      }\n\n      return users.reduce((acc, user) => {\n        const type = user.disabilityType ?? 3 \n        const label = typeMap[type] || '其他障碍'\n        acc[label] = (acc[label] || 0) + 1\n        return acc\n      }, {})\n    },\n    getRegionOption(data) {\n      return {\n        title: {\n          text: '用户地区分布',\n          subtext: `共统计 ${data.reduce((sum, item) => sum + item.value, 0)} 位用户`,\n          left: 'center',\n          top: '5%',\n          textStyle: {\n            color: '#666',\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          left: 'left',\n          top: '15%',\n          bottom: '15%',\n          itemGap: 8,\n          itemWidth: 14,\n          itemHeight: 14,\n          textStyle: {\n            color: '#666',\n            fontSize: 12\n          }\n        },\n        series: [{\n          name: '地区分布',\n          type: 'pie',\n          radius: ['35%', '65%'],\n          center: ['55%', '55%'],\n          data: data.sort((a, b) => b.value - a.value),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          itemStyle: {\n            borderRadius: 6,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            formatter: '{b|{b}} \\n {per|{d}%}',\n            position: 'outer',\n            alignTo: 'edge',\n            margin: 100,\n            rich: {\n              b: { fontSize: 12, lineHeight: 20 },\n              per: { color: '#999', fontSize: 10 }\n            }\n          },\n          color: [\n            '#5470C6', '#91CC75', '#FAC858', '#EE6666',\n            '#73C0DE', '#3BA272', '#FC8452', '#9A60B4'\n          ]\n        }]\n      }\n    },\n    getDisabilityOption(data) {\n      return {\n        title: {\n          text: '残障类型分布',\n          subtext: `总用户数: ${data.reduce((sum, item) => sum + item.value, 0)}`,\n          left: 'center',\n          textStyle: {\n            color: '#666',\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a}<br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          top: 'middle',\n          textStyle: {\n            color: '#666'\n          }\n        },\n        series: [{\n          name: '残障类型',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: data.sort((a, b) => b.value - a.value),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          itemStyle: {\n            borderRadius: 6,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            formatter: '{b|{b}}\\n{per|{d}%}',\n            rich: {\n              b: { fontSize: 12, lineHeight: 20 },\n              per: { color: '#999', fontSize: 10 }\n            }\n          },\n          color: [\n            '#67C23A', // 无障碍\n            '#409EFF', // 视障\n            '#E6A23C', // 听障\n            '#F56C6C'  // 其他障碍\n          ]\n        }]\n      }\n    }\n  },\n  mounted() {\n    this.updateTime()\n    this.timer = setInterval(this.updateTime, 1000)\n    this.fetchStats()\n    this.fetchNotifications();\n  },\n  beforeDestroy() {\n    clearInterval(this.timer)\n    if (this.regionChart) this.regionChart.dispose()\n    if (this.disabilityChart) this.disabilityChart.dispose()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .admin-card {\n    height: 200px;\n  }\n  .notifications-card {\n    height: 425px;\n  }\n\n  .notifications-card {\n    display: flex;\n    flex-direction: column;\n\n    h3 {\n      font-size: 18px;\n      font-weight: bold;\n      margin-bottom: 16px;\n    }\n\n    .notifications-table-wrapper {\n      flex: 1;\n      overflow-y: auto;\n    }\n  }\n\n  .stat-cards {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .dashboard-container .admin-card,\n  .dashboard-container .notifications-card,\n  .dashboard-container .stat-card {\n    height: auto;\n  }\n}\n\n.dashboard-container {\n  padding: 20px;\n\n  .admin-card {\n    margin-bottom: 30px;\n    border-radius: 16px;\n    overflow: hidden;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);\n    background: linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.05) 100%);\n    backdrop-filter: blur(8px);\n    border: 1px solid rgba(255,255,255,0.2);\n\n    .admin-profile {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 24px;\n      padding: 24px;\n      align-items: center;\n\n      .avatar-wrapper {\n        position: relative;\n        .user-icon {\n          width: 80px;\n          height: 80px;\n          color: rgba(255,255,255,0.9);\n          filter: drop-shadow(0 4px 12px rgba(0,0,0,0.1));\n        }\n        .online-indicator {\n          position: absolute;\n          right: 0;\n          bottom: 0;\n          width: 16px;\n          height: 16px;\n          background: #67C23A;\n          border: 2px solid #fff;\n          border-radius: 50%;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n      }\n\n      .admin-meta {\n        .title-group {\n          margin-bottom: 16px;\n          .admin-badge {\n            display: inline-block;\n            background: rgba(255,255,255,0.15);\n            color: rgba(255,255,255,0.9);\n            padding: 4px 12px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: 600;\n            letter-spacing: 0.5px;\n            backdrop-filter: blur(4px);\n            margin-bottom: 8px;\n          }\n          .admin-name {\n            font-size: 32px;\n            font-weight: 700;\n            color: rgba(255,255,255,0.95);\n            letter-spacing: -0.5px;\n            margin: 0;\n            line-height: 1.2;\n          }\n        }\n\n        .time-group {\n          display: grid;\n          gap: 8px;\n          .greeting, .current-time {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            font-size: 16px;\n            color: rgba(255,255,255,0.85);\n            .greeting-icon, .time-icon {\n              font-size: 20px;\n            }\n            .time-value {\n              font-family: 'Courier New', monospace;\n              font-weight: 600;\n              letter-spacing: 1px;\n            }\n          }\n        }\n      }\n    }\n\n    &:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 12px 32px rgba(0, 0, 0, 0.2);\n    }\n  }\n\n  .stat-cards {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end; // 使统计卡片组与管理员信息卡片底部对齐\n    height: 100%; // 确保统计卡片组占满可用高度\n\n    .stat-card {\n      flex: 1; // 使统计卡片高度更小\n      margin-bottom: 0; // 去掉多余的间距\n    }\n  }\n\n  .stat-cards {\n    height: 100%; // 使统计卡片组高度与管理员信息卡片一致\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; // 确保内容均匀分布\n\n    .stat-card {\n      flex-grow: 1; // 使统计卡片填充可用空间\n      margin-bottom: 0; // 去掉多余的间距\n    }\n  }\n\n  .stat-cards {\n    margin-top: 20px;\n\n    .stat-card {\n      margin-bottom: 20px;\n      transition: transform 0.3s ease, box-shadow 0.3s ease;\n      background: linear-gradient(135deg, #f5f7fa, #ffffff);\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\n      &:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n      }\n\n      .stat-content {\n        padding: 20px;\n        text-align: center;\n\n        .stat-title {\n          font-size: 18px;\n          font-weight: bold;\n          color: #303133;\n          margin-bottom: 16px;\n          border-bottom: 1px solid #ebeef5;\n          padding-bottom: 8px;\n        }\n\n        .stat-list {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n\n          li {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 8px 0;\n            border-bottom: 1px dashed #ebeef5;\n\n            &:last-child {\n              border-bottom: none;\n            }\n\n            .stat-label {\n              font-size: 14px;\n              color: #606266;\n              font-weight: 500;\n            }\n\n            .stat-value {\n              font-size: 16px;\n              color: #409EFF;\n              font-weight: bold;\n            }\n          }\n        }\n\n        el-table {\n          margin-top: 16px;\n          font-size: 14px;\n\n          .el-table__header-wrapper {\n            background-color: #f5f7fa;\n          }\n\n          .el-table__row {\n            &:hover {\n              background-color: #f0f9ff;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .stat-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    font-size: 16px;\n    color: #303133;\n\n    li {\n      margin-bottom: 8px;\n      display: flex;\n      justify-content: space-between;\n\n      span:first-child {\n        font-weight: bold;\n        color: #606266;\n      }\n    }\n  }\n\n  #regionChart,\n  #disabilityChart {\n    height: 400px;\n    width: 100%;\n    background: rgba(255,255,255,0.9);\n    border-radius: 8px;\n    box-shadow: 0 2px 12px rgba(0,0,0,0.1);\n  }\n\n  .notifications-card {\n    padding: 20px;\n    border-radius: 12px;\n    background: #fff;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\n    h3 {\n      font-size: 18px;\n      font-weight: bold;\n      margin-bottom: 16px;\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .el-col {\n    width: 100% !important;\n    margin-bottom: 20px;\n    \n    #regionChart,\n    #disabilityChart {\n      height: 300px;\n    }\n  }\n}\n</style>\n"]}]}