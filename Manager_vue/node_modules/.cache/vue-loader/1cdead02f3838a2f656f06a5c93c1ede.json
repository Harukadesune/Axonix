{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Uservip/index.vue?vue&type=style&index=0&id=d9d14aaa&scoped=true&lang=css","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Uservip/index.vue","mtime":1745308249743},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/css-loader/dist/cjs.js","mtime":1745391002266},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1745391002124},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/postcss-loader/src/index.js","mtime":1745391002227},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hcHAtY29udGFpbmVyIHsKICAgIHBhZGRpbmc6IDIwcHg7Cn0KCi5lbC10YWJsZSB7CiAgICBtYXJnaW4tdG9wOiAyMHB4Owp9CgouZWwtYnV0dG9uIHsKICAgIG1hcmdpbi1yaWdodDogNXB4Owp9Cgouc2VhcmNoLWZvcm0gewogICAgbWFyZ2luLWJvdHRvbTogMHB4Owp9CgoucmVjb3JkLWNvdW50IHsKICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBjb2xvcjogIzYwNjI2NjsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAwOA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Uservip","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <!-- VIP 查询表单 -->\n        <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n            <el-form-item label=\"用户ID\">\n                <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"fetchVips\">查询</el-button>\n                <el-button @click=\"resetSearch\">重置</el-button>\n            </el-form-item>\n        </el-form>\n\n        <!-- 操作按钮和记录数显示 -->\n        <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n            <el-col :span=\"8\">\n                <el-button type=\"primary\" @click=\"handleAdd\">添加VIP</el-button>\n                <el-button type=\"danger\" @click=\"confirmBatchDelete\"\n                    :disabled=\"selectedVips.length === 0\">批量删除</el-button>\n            </el-col>\n            <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n                <span>当前共有 {{ totalRecords }} 条记录</span>\n            </el-col>\n        </el-row>\n\n        <!-- VIP表格 -->\n        <el-table :data=\"vips\" border @selection-change=\"handleSelectionChange\":empty-text=\"'没有数据'\">\n            <el-table-column type=\"selection\" width=\"55\" />\n            <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\n            <el-table-column prop=\"userId\" label=\"用户ID\" width=\"100\" />\n            <el-table-column prop=\"levels\" label=\"VIP等级\" width=\"100\" />\n            <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"350\" />\n            <el-table-column prop=\"endTime\" label=\"结束时间\" width=\"350\" />\n            <el-table-column prop=\"totalPayment\" label=\"总支付金额\" width=\"100\" />\n\n            <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n                <template slot-scope=\"scope\">\n                    <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n                    <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!-- 添加/编辑VIP弹出框 -->\n        <el-dialog :visible.sync=\"dialogVisible\" title=\"VIP信息\" width=\"600px\">\n            <el-form ref=\"vipForm\" :model=\"vip\" :rules=\"rules\" label-width=\"100px\">\n                <el-form-item label=\"用户ID\" prop=\"userId\">\n                    <el-input v-model=\"vip.userId\" />\n                </el-form-item>\n\n                <el-form-item label=\"VIP等级\" prop=\"levels\">\n                    <el-input-number v-model=\"vip.levels\" :min=\"0\" :max=\"10\" />\n                </el-form-item>\n\n                <el-form-item label=\"开始时间\" prop=\"startTime\">\n                    <el-date-picker v-model=\"vip.startTime\" type=\"datetime\" />\n                </el-form-item>\n\n                <el-form-item label=\"结束时间\" prop=\"endTime\">\n                    <el-date-picker v-model=\"vip.endTime\" type=\"datetime\" />\n                </el-form-item>\n\n                <el-form-item label=\"总支付金额\" prop=\"totalPayment\">\n                    <el-input-number v-model=\"vip.totalPayment\" :min=\"0\" :max=\"1000000\" />\n                </el-form-item>\n\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n                    <el-button @click=\"closeDialog\">取消</el-button>\n                </el-form-item>\n            </el-form>\n        </el-dialog>\n    </div>\n</template>\n\n\n<script>\nimport VipAPI from '@/api/uservip_api.js';\n\nexport default {\n    data() {\n        return {\n            vips: [],\n            selectedVips: [],\n            searchForm: {\n                userId: ''\n            },\n            dialogVisible: false,\n            vip: {\n                id: null,\n                userId: 0,\n                levels: 0,\n                startTime: '',\n                endTime: '',\n                totalPayment: 0,\n            },\n            totalRecords: 0,\n            rules: {\n                userId: [{ required: true, message: '请输入用户ID', trigger: 'blur' }],\n                levels: [{ required: true, message: '请输入VIP等级', trigger: 'blur' }],\n                startTime: [{ required: true, message: '请选择开始时间', trigger: 'change' }],\n                endTime: [{ required: true, message: '请选择结束时间', trigger: 'change' }],\n                totalPayment: [{ required: true, message: '请输入总支付金额', trigger: 'blur' }]\n            }\n        };\n    },\n    created() {\n        this.fetchVips();\n    },\n    methods: {\n        async fetchVips() {\n            const example = {\n                oredCriteria: [{ criteria: [] }]\n            };\n\n            if (this.searchForm.userId) {\n                example.oredCriteria[0].criteria.push({\n                    condition: 'user_id =',\n                    value: this.searchForm.userId,\n                    singleValue: true\n                });\n            }\n\n            try {\n                const response = await VipAPI.getVips(example);\n                this.vips = response.data;\n\n                const countResponse = await VipAPI.countVips(example);\n                this.totalRecords = countResponse.data;\n            } catch (error) {\n                console.error('获取VIP列表失败', error);\n            }\n        },\n\n        resetSearch() {\n            this.searchForm = { userId: '' };\n            this.totalRecords = 0;\n            this.fetchVips();\n        },\n\n        handleSelectionChange(selection) {\n            this.selectedVips = selection.map(vip => vip.id);\n        },\n\n        handleAdd() {\n            this.vip = {\n                id: null,\n                userId: 0,\n                levels: 0,\n                startTime: '',\n                endTime: '',\n                totalPayment: 0\n            };\n            this.dialogVisible = true;\n        },\n\n        handleEdit(vip) {\n            this.vip = { ...vip };\n            this.dialogVisible = true;\n        },\n\n        async submitForm() {\n            this.$refs.vipForm.validate(async (valid) => {\n                if (valid) {\n                    try {\n                        if (this.vip.id) {\n                            await VipAPI.updateVip(this.vip);\n                        } else {\n                            await VipAPI.addVip(this.vip);\n                        }\n                        this.$message.success('VIP信息保存成功');\n                        this.dialogVisible = false;\n                        this.fetchVips();\n                    } catch (error) {\n                        this.$message.error('保存VIP信息失败');\n                        console.error(error);\n                    }\n                }\n            });\n        },\n\n        closeDialog() {\n            this.dialogVisible = false;\n        },\n\n        confirmBatchDelete() {\n            if (this.selectedVips.length === 0) return;\n            this.$confirm('确定要删除选中的VIP信息吗？', '警告', {\n                type: 'warning',\n                cancelButtonText: '取消',\n                confirmButtonText: '确定'\n            })\n                .then(() => this.handleBatchDelete())\n                .catch(() => { });\n        },\n\n        async handleBatchDelete() {\n            try {\n                await Promise.all(this.selectedVips.map(id => VipAPI.deleteVip(id)));\n                this.fetchVips();\n                this.selectedVips = [];\n                this.$message.success('批量删除成功');\n            } catch (error) {\n                console.error('批量删除失败', error);\n            }\n        },\n\n        async handleDelete(id) {\n            this.$confirm('确定要删除该用户吗？', '警告', { \n                type: 'warning',\n                cancelButtonText: '取消',\n                confirmButtonText: '确定'\n             })\n                .then(async () => {\n                    try {\n                        await VipAPI.deleteVip(id);\n                        this.$message.success('删除成功');\n                        this.fetchVips();\n                    } catch (error) {\n                        console.error('删除失败', error);\n                        this.$message.error('删除VIP失败');\n                    }\n                })\n                .catch(() => {\n                    // 如果用户取消操作，什么都不做\n                });\n        }\n    }\n};\n</script>\n\n<style scoped>\n.app-container {\n    padding: 20px;\n}\n\n.el-table {\n    margin-top: 20px;\n}\n\n.el-button {\n    margin-right: 5px;\n}\n\n.search-form {\n    margin-bottom: 0px;\n}\n\n.record-count {\n    margin-top: 20px;\n    font-size: 14px;\n    color: #606266;\n}\n</style>"]}]}