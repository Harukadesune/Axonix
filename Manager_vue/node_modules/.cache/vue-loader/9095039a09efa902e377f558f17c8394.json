{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Postinfo/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Postinfo/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBQb3N0aW5mb0FQSSBmcm9tICdAL2FwaS9wb3N0aW5mb19hcGknOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogW10sCiAgICAgIHNlbGVjdGVkUG9zdHM6IFtdLAogICAgICB0b3RhbFJlY29yZHM6IDAsCiAgICAgIHNlYXJjaEZvcm06IHsKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgdXNlcklkOiAnJwogICAgICB9LAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgY3VycmVudFBvc3Q6IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgdXNlcklkOiAnJywKICAgICAgICBsaWtlczogMCwKICAgICAgICBkaXNsaWtlczogMCwKICAgICAgICBjcmVhdGVkQXQ6ICcnLAogICAgICAgIHVwZGF0ZWRBdDogJycsCiAgICAgICAgY29udGVudDogJycKICAgICAgfQogICAgfTsKICB9LAoKICBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaEZvcnVtUG9zdHMoKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaEZvcnVtUG9zdHMoKSB7CiAgICAgIGNvbnN0IGV4YW1wbGUgPSB7CiAgICAgICAgb3JlZENyaXRlcmlhOiBbeyBjcml0ZXJpYTogW10gfV0KICAgICAgfTsKCiAgICAgIGlmICh0aGlzLnNlYXJjaEZvcm0udGl0bGUpIHsKICAgICAgICBleGFtcGxlLm9yZWRDcml0ZXJpYVswXS5jcml0ZXJpYS5wdXNoKHsKICAgICAgICAgIGNvbmRpdGlvbjogInRpdGxlIExJS0UiLAogICAgICAgICAgdmFsdWU6IGAlJHt0aGlzLnNlYXJjaEZvcm0udGl0bGV9JWAsCiAgICAgICAgICBzaW5nbGVWYWx1ZTogdHJ1ZQogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy5zZWFyY2hGb3JtLnVzZXJJZCkgewogICAgICAgIGV4YW1wbGUub3JlZENyaXRlcmlhWzBdLmNyaXRlcmlhLnB1c2goewogICAgICAgICAgY29uZGl0aW9uOiAidXNlcl9pZCA9IiwKICAgICAgICAgIHZhbHVlOiB0aGlzLnNlYXJjaEZvcm0udXNlcklkLAogICAgICAgICAgc2luZ2xlVmFsdWU6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IFBvc3RpbmZvQVBJLmdldEZvcnVtUG9zdHNXaXRoQmxvYnMoZXhhbXBsZSk7CiAgICAgICAgdGhpcy5wb3N0cyA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIGNvbnN0IGNvdW50UmVzcG9uc2UgPSBhd2FpdCBQb3N0aW5mb0FQSS5jb3VudEZvcnVtUG9zdHMoZXhhbXBsZSk7CiAgICAgICAgdGhpcy50b3RhbFJlY29yZHMgPSBjb3VudFJlc3BvbnNlLmRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5biW5a2Q5YiX6KGo5aSx6LSlJywgZXJyb3IpOwogICAgICB9CiAgICB9LAoKICAgIHJlc2V0U2VhcmNoKCkgewogICAgICB0aGlzLnNlYXJjaEZvcm0gPSB7IHRpdGxlOiAnJywgdXNlcklkOiAnJyB9OwogICAgICB0aGlzLmZldGNoRm9ydW1Qb3N0cygpOwogICAgfSwKCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRQb3N0cyA9IHNlbGVjdGlvbi5tYXAocG9zdCA9PiBwb3N0LmlkKTsKICAgIH0sCgogICAgZm9ybWF0RGF0ZShkYXRlKSB7CiAgICAgIGNvbnN0IGQgPSBuZXcgRGF0ZShkYXRlKTsKICAgICAgcmV0dXJuIGAke2QuZ2V0RnVsbFllYXIoKX0vJHtkLmdldE1vbnRoKCkgKyAxfS8ke2QuZ2V0RGF0ZSgpfSAke2QuZ2V0SG91cnMoKX06JHtkLmdldE1pbnV0ZXMoKX06JHtkLmdldFNlY29uZHMoKX1gOwogICAgfSwKCiAgICBhc3luYyB1cGRhdGVQb3N0U3RhdHVzKHBvc3QpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBQb3N0aW5mb0FQSS51cGRhdGVGb3J1bVBvc3QocG9zdCk7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfluJblrZDnirbmgIHmm7TmlrDmiJDlip8nKTsKICAgICAgICBwb3N0LnVwZGF0ZWRBdCA9IG5ldyBEYXRlKCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign5pu05paw5biW5a2Q54q25oCB5aSx6LSlJywgZXJyb3IpOwogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+abtOaWsOW4luWtkOeKtuaAgeWksei0pScpOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGhhbmRsZURlbGV0ZShwb3N0SWQpIHsKICAgICAgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB5Yig6Zmk6K+l5biW5a2Q5ZCX77yfJywgJ+itpuWRiicsIHsgCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJyB9KQogICAgICAgIC50aGVuKGFzeW5jICgpID0+IHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGF3YWl0IFBvc3RpbmZvQVBJLmRlbGV0ZUZvcnVtUG9zdChwb3N0SWQpOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOwogICAgICAgICAgICB0aGlzLmZldGNoRm9ydW1Qb3N0cygpOwogICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcign5Yig6Zmk5aSx6LSlJywgZXJyb3IpOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKUnKTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7IH0pOwogICAgfSwKCiAgICBhc3luYyBjb25maXJtQmF0Y2hEZWxldGUoKSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkUG9zdHMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfor7fpgInmi6nopoHliKDpmaTnmoTluJblrZAnKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruWumuimgeWIoOmZpOmAieS4reeahOW4luWtkOWQl++8nycsICforablkYonLCB7CiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLCAgLy8g6K6+572u5Y+W5raI5oyJ6ZKu5paH5pysCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponICAgLy8g6K6+572u56Gu5a6a5oyJ6ZKu5paH5pysCiAgICAgIH0pCiAgICAgICAgLnRoZW4oYXN5bmMgKCkgPT4gewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwodGhpcy5zZWxlY3RlZFBvc3RzLm1hcChpZCA9PiBQb3N0aW5mb0FQSS5kZWxldGVGb3J1bVBvc3QoaWQpKSk7CiAgICAgICAgICAgIHRoaXMuZmV0Y2hGb3J1bVBvc3RzKCk7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRQb3N0cyA9IFtdOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aJuemHj+WIoOmZpOaIkOWKnycpOwogICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcign5om56YeP5Yig6Zmk5aSx6LSlJywgZXJyb3IpOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmibnph4/liKDpmaTlpLHotKUnKTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7IH0pOwogICAgfSwKCiAgICBhc3luYyBoYW5kbGVWaWV3KHBvc3QpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IFBvc3RpbmZvQVBJLmdldEZvcnVtUG9zdERldGFpbChwb3N0LmlkKTsKICAgICAgICB0aGlzLmN1cnJlbnRQb3N0ID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluW4luWtkOivpuaDheWksei0pScsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bluJblrZDor6bmg4XlpLHotKUnKTsKICAgICAgfQogICAgfSwKCiAgICBjbG9zZURpYWxvZygpIHsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA4FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Postinfo","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索表单 -->\n    <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n      <el-form-item label=\"帖子标题\">\n        <el-input v-model=\"searchForm.title\" placeholder=\"请输入帖子标题\" clearable />\n      </el-form-item>\n      <el-form-item label=\"用户ID\">\n        <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"fetchForumPosts\">查询</el-button>\n        <el-button @click=\"resetSearch\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮和记录数显示 -->\n    <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n      <el-col :span=\"8\">\n        <el-button type=\"danger\" @click=\"confirmBatchDelete\" :disabled=\"selectedPosts.length === 0\">批量删除</el-button>\n      </el-col>\n      <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n        <span>当前共有 {{ totalRecords }} 条记录</span>\n      </el-col>\n    </el-row>\n\n    <!-- 帖子表格 -->\n    <el-table :data=\"posts\" border @selection-change=\"handleSelectionChange\":empty-text=\"'没有数据'\">\n      <el-table-column type=\"selection\" width=\"55\" />\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n      <el-table-column prop=\"title\" label=\"标题\" width=\"200\" />\n      <el-table-column prop=\"userId\" label=\"用户ID\" width=\"100\" />\n      <el-table-column prop=\"likes\" label=\"点赞数\" width=\"100\" />\n      <el-table-column prop=\"dislikes\" label=\"点踩数\" width=\"100\" />\n      <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.createdAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"updatedAt\" label=\"更新时间\" width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.updatedAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"审核状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-select v-model=\"scope.row.status\" @change=\"updatePostStatus(scope.row)\" size=\"small\">\n            <el-option label=\"审核中\" :value=\"0\" />\n            <el-option label=\"驳回\" :value=\"1\" />\n            <el-option label=\"异常\" :value=\"2\" />\n            <el-option label=\"已发布\" :value=\"3\" />\n            <el-option label=\"私密\" :value=\"4\" />\n          </el-select>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleView(scope.row)\">查看</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 查看帖子弹出框 -->\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"帖子详情\" width=\"800px\">\n      <div>\n        <el-form :model=\"currentPost\" label-width=\"100px\">\n          <el-form-item label=\"帖子标题\">\n            <el-input v-model=\"currentPost.title\" readonly />\n          </el-form-item>\n          <el-form-item label=\"用户ID\">\n            <el-input v-model=\"currentPost.userId\" readonly />\n          </el-form-item>\n          <el-form-item label=\"点赞数\">\n            <el-input v-model=\"currentPost.likes\" readonly />\n          </el-form-item>\n          <el-form-item label=\"点踩数\">\n            <el-input v-model=\"currentPost.dislikes\" readonly />\n          </el-form-item>\n          <el-form-item label=\"内容\">\n            <el-input type=\"textarea\" v-model=\"currentPost.content\" rows=\"6\" readonly />\n          </el-form-item>\n        </el-form>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">关闭</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport PostinfoAPI from '@/api/postinfo_api';\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      selectedPosts: [],\n      totalRecords: 0,\n      searchForm: {\n        title: '',\n        userId: ''\n      },\n      dialogVisible: false,\n      currentPost: {\n        id: null,\n        title: '',\n        userId: '',\n        likes: 0,\n        dislikes: 0,\n        createdAt: '',\n        updatedAt: '',\n        content: ''\n      }\n    };\n  },\n\n  created() {\n    this.fetchForumPosts();\n  },\n\n  methods: {\n    async fetchForumPosts() {\n      const example = {\n        oredCriteria: [{ criteria: [] }]\n      };\n\n      if (this.searchForm.title) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"title LIKE\",\n          value: `%${this.searchForm.title}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.userId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"user_id =\",\n          value: this.searchForm.userId,\n          singleValue: true\n        });\n      }\n\n      try {\n        const response = await PostinfoAPI.getForumPostsWithBlobs(example);\n        this.posts = response.data;\n\n        const countResponse = await PostinfoAPI.countForumPosts(example);\n        this.totalRecords = countResponse.data;\n      } catch (error) {\n        console.error('获取帖子列表失败', error);\n      }\n    },\n\n    resetSearch() {\n      this.searchForm = { title: '', userId: '' };\n      this.fetchForumPosts();\n    },\n\n    handleSelectionChange(selection) {\n      this.selectedPosts = selection.map(post => post.id);\n    },\n\n    formatDate(date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n    },\n\n    async updatePostStatus(post) {\n      try {\n        await PostinfoAPI.updateForumPost(post);\n        this.$message.success('帖子状态更新成功');\n        post.updatedAt = new Date();\n      } catch (error) {\n        console.error('更新帖子状态失败', error);\n        this.$message.error('更新帖子状态失败');\n      }\n    },\n\n    async handleDelete(postId) {\n      this.$confirm('确定要删除该帖子吗？', '警告', { \n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定' })\n        .then(async () => {\n          try {\n            await PostinfoAPI.deleteForumPost(postId);\n            this.$message.success('删除成功');\n            this.fetchForumPosts();\n          } catch (error) {\n            console.error('删除失败', error);\n            this.$message.error('删除失败');\n          }\n        })\n        .catch(() => { });\n    },\n\n    async confirmBatchDelete() {\n      if (this.selectedPosts.length === 0) {\n        this.$message.warning('请选择要删除的帖子');\n        return;\n      }\n\n      this.$confirm('确定要删除选中的帖子吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',  // 设置取消按钮文本\n        confirmButtonText: '确定'   // 设置确定按钮文本\n      })\n        .then(async () => {\n          try {\n            await Promise.all(this.selectedPosts.map(id => PostinfoAPI.deleteForumPost(id)));\n            this.fetchForumPosts();\n            this.selectedPosts = [];\n            this.$message.success('批量删除成功');\n          } catch (error) {\n            console.error('批量删除失败', error);\n            this.$message.error('批量删除失败');\n          }\n        })\n        .catch(() => { });\n    },\n\n    async handleView(post) {\n      try {\n        const response = await PostinfoAPI.getForumPostDetail(post.id);\n        this.currentPost = response.data;\n        this.dialogVisible = true;\n      } catch (error) {\n        console.error('获取帖子详情失败', error);\n        this.$message.error('获取帖子详情失败');\n      }\n    },\n\n    closeDialog() {\n      this.dialogVisible = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin-right: 5px;\n}\n\n.search-form {\n  margin-bottom: 0px;\n}\n\n.record-count {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #606266;\n}\n\n.action-row {\n  margin-bottom: 20px;\n}\n\n.dialog-footer {\n  text-align: right;\n}\n</style>"]}]}