{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Feedback/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Feedback/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IEZlZWRiYWNrQVBJIGZyb20gJ0AvYXBpL2ZlZWRiYWNrX2FwaSc7CiAgCiAgZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBmZWVkYmFja3M6IFtdLCAgICAgICAgLy8g5Y+N6aaI5pWw5o2uCiAgICAgICAgdG90YWxSZWNvcmRzOiAwLCAgICAgIC8vIOaAu+iusOW9leaVsAogICAgICAgIHNlYXJjaEZvcm06IHsgdXNlcklkOiAnJyB9LCAvLyDmkJzntKLooajljZUKICAgICAgICBzdGF0dXNPcHRpb25zOiBbICAgICAgLy8g54q25oCB6YCJ6aG5CiAgICAgICAgICB7IHZhbHVlOiAwLCBsYWJlbDogJ+W+heWkhOeQhicgfSwKICAgICAgICAgIHsgdmFsdWU6IDEsIGxhYmVsOiAn5aSE55CG5LitJyB9LAogICAgICAgICAgeyB2YWx1ZTogMiwgbGFiZWw6ICflt7Lop6PlhrMnIH0KICAgICAgICBdCiAgICAgIH07CiAgICB9LAogIAogICAgY3JlYXRlZCgpIHsKICAgICAgdGhpcy5mZXRjaEZlZWRiYWNrcygpOwogICAgfSwKICAKICAgIG1ldGhvZHM6IHsKICAgICAgLy8g6I635Y+W5Y+N6aaI5pWw5o2uCiAgICAgIGFzeW5jIGZldGNoRmVlZGJhY2tzKCkgewogICAgICAgIGNvbnN0IGV4YW1wbGUgPSB7IG9yZWRDcml0ZXJpYTogW3sgY3JpdGVyaWE6IFtdIH1dIH07CiAgICAgICAgaWYgKHRoaXMuc2VhcmNoRm9ybS51c2VySWQpIHsKICAgICAgICAgIGV4YW1wbGUub3JlZENyaXRlcmlhWzBdLmNyaXRlcmlhLnB1c2goewogICAgICAgICAgICBjb25kaXRpb246ICJ1c2VyX2lkID0iLAogICAgICAgICAgICB2YWx1ZTogdGhpcy5zZWFyY2hGb3JtLnVzZXJJZCwKICAgICAgICAgICAgc2luZ2xlVmFsdWU6IHRydWUKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICB0cnkgewogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBGZWVkYmFja0FQSS5nZXRGZWVkYmFja3NCeUV4YW1wbGVXaXRoQmxvYnMoZXhhbXBsZSk7CiAgICAgICAgICB0aGlzLmZlZWRiYWNrcyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICBjb25zdCBjb3VudFJlc3BvbnNlID0gYXdhaXQgRmVlZGJhY2tBUEkuY291bnRGZWVkYmFja3MoZXhhbXBsZSk7CiAgICAgICAgICB0aGlzLnRvdGFsUmVjb3JkcyA9IGNvdW50UmVzcG9uc2UuZGF0YTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5Y+N6aaI5YiX6KGo5aSx6LSlJywgZXJyb3IpOwogICAgICAgIH0KICAgICAgfSwKICAKICAgICAgLy8g6YeN572u5pCc57SiCiAgICAgIHJlc2V0U2VhcmNoKCkgewogICAgICAgIHRoaXMuc2VhcmNoRm9ybSA9IHsgdXNlcklkOiAnJyB9OwogICAgICAgIHRoaXMuZmV0Y2hGZWVkYmFja3MoKTsKICAgICAgfSwKICAKICAgICAgLy8g5L+u5pS554q25oCBCiAgICAgIGFzeW5jIHVwZGF0ZVN0YXR1cyhyb3cpIHsKICB0cnkgewogICAgLy8g5YeG5aSH6KaB5pu05paw55qE5Y+N6aaI6K6w5b2VCiAgICBjb25zdCBmZWVkYmFjayA9IHsgaWQ6IHJvdy5pZCwgc3RhdHVzOiByb3cuc3RhdHVzIH07CiAgICAKICAgIC8vIOiwg+eUqCBBUEkg6L+b6KGM54q25oCB5pu05pawCiAgICBhd2FpdCBGZWVkYmFja0FQSS51cGRhdGVGZWVkYmFja1NlbGVjdGl2ZShmZWVkYmFjayk7CiAgICAKICAgIC8vIOabtOaWsOaIkOWKn+WQjueahOWPjemmiOS/oeaBrwogICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfnirbmgIHmm7TmlrDmiJDlip8nKTsKICB9IGNhdGNoIChlcnJvcikgewogICAgLy8g5aaC5p6c5Y+R55Sf6ZSZ6K+v77yM5pi+56S66ZSZ6K+v5L+h5oGvCiAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfnirbmgIHmm7TmlrDlpLHotKUnKTsKICAgIGNvbnNvbGUuZXJyb3IoJ+eKtuaAgeabtOaWsOmUmeivrycsIGVycm9yKTsKICB9Cn0sCiAgCiAgICAgIC8vIOagvOW8j+WMluaXpeacnwogICAgICBmb3JtYXREYXRlKGRhdGUpIHsKICAgICAgICByZXR1cm4gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlU3RyaW5nKCkgOiAi5pegIjsKICAgICAgfQogICAgfQogIH07CiAg"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAwCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Feedback","sourcesContent":["<template>\n    <div class=\"app-container\">\n      <!-- 搜索表单 -->\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n        <el-form-item label=\"用户ID\">\n          <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchFeedbacks\">查询</el-button>\n          <el-button @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n  \n      <!-- 记录数显示 -->\n      <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"8\" class=\"record-count\">\n          <span>当前共有 {{ totalRecords }} 条记录</span>\n        </el-col>\n      </el-row>\n  \n      <!-- 反馈表格 -->\n      <el-table :data=\"feedbacks\" border>\n        <el-table-column prop=\"id\" label=\"反馈ID\" />\n        <el-table-column prop=\"userId\" label=\"用户ID\" />\n        <el-table-column prop=\"issue\" label=\"反馈内容\" />\n        <el-table-column prop=\"createdAt\" label=\"创建时间\">\n          <template v-slot=\"scope\">{{ formatDate(scope.row.createdAt) }}</template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template v-slot=\"scope\">\n            <el-select v-model=\"scope.row.status\" @change=\"updateStatus(scope.row)\">\n              <el-option v-for=\"item in statusOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n            </el-select>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n  </template>\n  \n  <script>\n  import FeedbackAPI from '@/api/feedback_api';\n  \n  export default {\n    data() {\n      return {\n        feedbacks: [],        // 反馈数据\n        totalRecords: 0,      // 总记录数\n        searchForm: { userId: '' }, // 搜索表单\n        statusOptions: [      // 状态选项\n          { value: 0, label: '待处理' },\n          { value: 1, label: '处理中' },\n          { value: 2, label: '已解决' }\n        ]\n      };\n    },\n  \n    created() {\n      this.fetchFeedbacks();\n    },\n  \n    methods: {\n      // 获取反馈数据\n      async fetchFeedbacks() {\n        const example = { oredCriteria: [{ criteria: [] }] };\n        if (this.searchForm.userId) {\n          example.oredCriteria[0].criteria.push({\n            condition: \"user_id =\",\n            value: this.searchForm.userId,\n            singleValue: true\n          });\n        }\n        try {\n          const response = await FeedbackAPI.getFeedbacksByExampleWithBlobs(example);\n          this.feedbacks = response.data;\n          const countResponse = await FeedbackAPI.countFeedbacks(example);\n          this.totalRecords = countResponse.data;\n        } catch (error) {\n          console.error('获取反馈列表失败', error);\n        }\n      },\n  \n      // 重置搜索\n      resetSearch() {\n        this.searchForm = { userId: '' };\n        this.fetchFeedbacks();\n      },\n  \n      // 修改状态\n      async updateStatus(row) {\n  try {\n    // 准备要更新的反馈记录\n    const feedback = { id: row.id, status: row.status };\n    \n    // 调用 API 进行状态更新\n    await FeedbackAPI.updateFeedbackSelective(feedback);\n    \n    // 更新成功后的反馈信息\n    this.$message.success('状态更新成功');\n  } catch (error) {\n    // 如果发生错误，显示错误信息\n    this.$message.error('状态更新失败');\n    console.error('状态更新错误', error);\n  }\n},\n  \n      // 格式化日期\n      formatDate(date) {\n        return date ? new Date(date).toLocaleString() : \"无\";\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .app-container {\n    padding: 20px;\n  }\n  \n  .el-table {\n    margin-top: 10px;\n  }\n  \n  .el-button {\n    margin-right: 5px;\n  }\n  \n  .search-form {\n    margin-bottom: 0px;\n  }\n  \n  .record-count {\n    font-size: 14px;\n    color: #606266;\n  }\n  \n  .action-row {\n    margin-bottom: 20px;\n  }\n  </style>\n  "]}]}