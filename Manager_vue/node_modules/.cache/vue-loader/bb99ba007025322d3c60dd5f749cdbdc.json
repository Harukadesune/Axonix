{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Commentinfo/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Commentinfo/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDb21tZW50QVBJIGZyb20gJ0AvYXBpL2NvbW1lbnRpbmZvX2FwaSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbW1lbnRzOiBbXSwKICAgICAgdG90YWxSZWNvcmRzOiAwLAogICAgICBzZWxlY3RlZENvbW1lbnRzOiBbXSwKICAgICAgc2VhcmNoRm9ybTogewogICAgICAgIGNvbnRlbnQ6ICcnLAogICAgICAgIHVzZXJJZDogJycsCiAgICAgICAgcG9zdElkOiAnJwogICAgICB9LAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgc3RhdHVzTWFwOiB7CiAgICAgICAgMDogJ+WuoeaguOS4rScsCiAgICAgICAgMTogJ+mps+WbnicsCiAgICAgICAgMjogJ+W8guW4uCcsCiAgICAgICAgMzogJ+W3suWPkeW4gycsCiAgICAgICAgNDogJ+engeWvhicKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoQ29tbWVudHMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGZldGNoQ29tbWVudHMoKSB7CiAgICAgIGNvbnN0IGV4YW1wbGUgPSB7CiAgICAgICAgb3JlZENyaXRlcmlhOiBbeyBjcml0ZXJpYTogW10gfV0KICAgICAgfTsKCiAgICAgIGlmICh0aGlzLnNlYXJjaEZvcm0uY29udGVudCkgewogICAgICAgIGV4YW1wbGUub3JlZENyaXRlcmlhWzBdLmNyaXRlcmlhLnB1c2goewogICAgICAgICAgY29uZGl0aW9uOiAiY29udGVudCBMSUtFIiwKICAgICAgICAgIHZhbHVlOiBgJSR7dGhpcy5zZWFyY2hGb3JtLmNvbnRlbnR9JWAsCiAgICAgICAgICBzaW5nbGVWYWx1ZTogdHJ1ZQogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy5zZWFyY2hGb3JtLnVzZXJJZCkgewogICAgICAgIGV4YW1wbGUub3JlZENyaXRlcmlhWzBdLmNyaXRlcmlhLnB1c2goewogICAgICAgICAgY29uZGl0aW9uOiAidXNlcl9pZCA9IiwKICAgICAgICAgIHZhbHVlOiB0aGlzLnNlYXJjaEZvcm0udXNlcklkLAogICAgICAgICAgc2luZ2xlVmFsdWU6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2VhcmNoRm9ybS5wb3N0SWQpIHsKICAgICAgICBleGFtcGxlLm9yZWRDcml0ZXJpYVswXS5jcml0ZXJpYS5wdXNoKHsKICAgICAgICAgIGNvbmRpdGlvbjogInBvc3RJZCA9IiwKICAgICAgICAgIHZhbHVlOiB0aGlzLnNlYXJjaEZvcm0ucG9zdElkLAogICAgICAgICAgc2luZ2xlVmFsdWU6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IENvbW1lbnRBUEkuZ2V0Q29tbWVudHNCeUV4YW1wbGVXaXRoQmxvYnMoZXhhbXBsZSk7CiAgICAgICAgdGhpcy5jb21tZW50cyA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIGNvbnN0IGNvdW50UmVzcG9uc2UgPSBhd2FpdCBDb21tZW50QVBJLmNvdW50Q29tbWVudHMoZXhhbXBsZSk7CiAgICAgICAgdGhpcy50b3RhbFJlY29yZHMgPSBjb3VudFJlc3BvbnNlLmRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W6K+E6K665YiX6KGo5aSx6LSlJywgZXJyb3IpOwogICAgICB9CiAgICB9LAoKICAgIC8vIOmHjee9ruaQnOe0ogogICAgcmVzZXRTZWFyY2goKSB7CiAgICAgIHRoaXMuc2VhcmNoRm9ybSA9IHsgY29udGVudDogJycsIHVzZXJJZDogJycsIHBvc3RJZDogJycgfTsKICAgICAgdGhpcy5mZXRjaENvbW1lbnRzKCk7CiAgICB9LAoKICAgIC8vIOmAieaLqeivhOiuuuaXtueahOWbnuiwgwogICAgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbikgewogICAgICB0aGlzLnNlbGVjdGVkQ29tbWVudHMgPSBzZWxlY3Rpb24ubWFwKGNvbW1lbnQgPT4gY29tbWVudC5pZCk7CiAgICB9LAoKICAgIC8vIOWIoOmZpOivhOiuugogICAgYXN5bmMgaGFuZGxlRGVsZXRlKGlkKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruWumuimgeWIoOmZpOi/meadoeivhOiuuuWQl++8nycsICfmj5DnpLonLCB7CiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBiZWZvcmVDbG9zZTogKGFjdGlvbiwgaW5zdGFuY2UsIGRvbmUpID0+IHsKICAgICAgICAgIGlmIChhY3Rpb24gPT09ICdjb25maXJtJykgewogICAgICAgICAgICBpbnN0YW5jZS5jb25maXJtQnV0dG9uTG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIENvbW1lbnRBUEkuZGVsZXRlQ29tbWVudChpZCkKICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOwogICAgICAgICAgICAgICAgdGhpcy5mZXRjaENvbW1lbnRzKCk7CiAgICAgICAgICAgICAgICBkb25lKCk7CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5aSx6LSlJyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIC5maW5hbGx5KCgpID0+IHsKICAgICAgICAgICAgICAgIGluc3RhbmNlLmNvbmZpcm1CdXR0b25Mb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkb25lKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCflt7Llj5bmtojliKDpmaQnKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGFzeW5jIGNvbmZpcm1CYXRjaERlbGV0ZSgpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRDb21tZW50cy5sZW5ndGggPT09IDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+mAieaLqeimgeWIoOmZpOeahOivhOiuuicpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB5Yig6Zmk6YCJ5Lit55qE6K+E6K665ZCX77yfJywgJ+itpuWRiicsIHsKICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponCiAgICAgIH0pCiAgICAgICAgLnRoZW4oYXN5bmMgKCkgPT4gewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwodGhpcy5zZWxlY3RlZENvbW1lbnRzLm1hcChpZCA9PiBDb21tZW50QVBJLmRlbGV0ZUNvbW1lbnQoaWQpKSk7CiAgICAgICAgICAgIHRoaXMuZmV0Y2hDb21tZW50cygpOwogICAgICAgICAgICB0aGlzLnNlbGVjdGVkQ29tbWVudHMgPSBbXTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmibnph4/liKDpmaTmiJDlip8nKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+aJuemHj+WIoOmZpOWksei0pScsIGVycm9yKTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5om56YeP5Yig6Zmk5aSx6LSlJyk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4geyB9KTsKICAgIH0sCgogICAgLy8g5pu05paw6K+E6K6654q25oCBCiAgICBhc3luYyB1cGRhdGVTdGF0dXMoY29tbWVudCkgewogICAgICB0cnkgewogICAgICAgIGF3YWl0IENvbW1lbnRBUEkudXBkYXRlQ29tbWVudChjb21tZW50KTsKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+eKtuaAgeabtOaWsOaIkOWKnycpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+abtOaWsOeKtuaAgeWksei0pScpOwogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9LAoKICAgIC8vIOagvOW8j+WMluaXtumXtAogICAgZm9ybWF0RGF0ZShkYXRlKSB7CiAgICAgIHJldHVybiBkYXRlID8gbmV3IERhdGUoZGF0ZSkudG9Mb2NhbGVTdHJpbmcoKSA6ICLml6AiOwogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqfile":"index.vue","sourceRoot":"src/views/Commentinfo","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索表单 -->\n    <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n      <el-form-item label=\"内容\">\n        <el-input v-model=\"searchForm.content\" placeholder=\"请输入评论内容\" clearable />\n      </el-form-item>\n      <el-form-item label=\"用户ID\">\n        <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n      </el-form-item>\n      <el-form-item label=\"帖子ID\">\n        <el-input v-model=\"searchForm.postId\" placeholder=\"请输入帖子ID\" clearable />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"fetchComments\">查询</el-button>\n        <el-button @click=\"resetSearch\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮和记录数显示 -->\n    <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n      <el-col :span=\"8\">\n        <el-button type=\"danger\" @click=\"confirmBatchDelete\" :disabled=\"selectedComments.length === 0\">批量删除</el-button>\n      </el-col>\n      <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n        <span>当前共有 {{ totalRecords }} 条记录</span>\n      </el-col>\n    </el-row>\n\n    <!-- 评论表格 -->\n    <el-table :data=\"comments\" border @selection-change=\"handleSelectionChange\" :empty-text=\"'没有数据'\">\n      <el-table-column type=\"selection\" width=\"50\" />\n      <el-table-column prop=\"id\" label=\"ID\" />\n      <el-table-column prop=\"userId\" label=\"用户ID\" />\n      <el-table-column prop=\"postId\" label=\"帖子ID\" />\n      <el-table-column prop=\"likes\" label=\"点赞数\" />\n      <el-table-column prop=\"dislikes\" label=\"点踩数\" />\n      <el-table-column prop=\"createdAt\" label=\"创建时间\">\n        <template slot-scope=\"scope\">{{ formatDate(scope.row.createdAt) }}</template>\n      </el-table-column>\n      <el-table-column prop=\"content\" label=\"评论内容\">\n        <template slot-scope=\"scope\">{{ scope.row.content }}</template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"审核状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-select v-model=\"scope.row.status\" @change=\"updateStatus(scope.row)\" size=\"small\">\n            <el-option v-for=\"(label, value) in statusMap\" :key=\"value\" :label=\"label\" :value=\"value\" />\n          </el-select>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 批量删除确认框 -->\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"确认删除\" width=\"400px\">\n      <span>确定要删除选中的评论吗？</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleBatchDelete\">确定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport CommentAPI from '@/api/commentinfo_api';\n\nexport default {\n  data() {\n    return {\n      comments: [],\n      totalRecords: 0,\n      selectedComments: [],\n      searchForm: {\n        content: '',\n        userId: '',\n        postId: ''\n      },\n      dialogVisible: false,\n      statusMap: {\n        0: '审核中',\n        1: '驳回',\n        2: '异常',\n        3: '已发布',\n        4: '私密'\n      }\n    };\n  },\n  created() {\n    this.fetchComments();\n  },\n  methods: {\n    async fetchComments() {\n      const example = {\n        oredCriteria: [{ criteria: [] }]\n      };\n\n      if (this.searchForm.content) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"content LIKE\",\n          value: `%${this.searchForm.content}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.userId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"user_id =\",\n          value: this.searchForm.userId,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.postId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"postId =\",\n          value: this.searchForm.postId,\n          singleValue: true\n        });\n      }\n\n      try {\n        const response = await CommentAPI.getCommentsByExampleWithBlobs(example);\n        this.comments = response.data;\n\n        const countResponse = await CommentAPI.countComments(example);\n        this.totalRecords = countResponse.data;\n      } catch (error) {\n        console.error('获取评论列表失败', error);\n      }\n    },\n\n    // 重置搜索\n    resetSearch() {\n      this.searchForm = { content: '', userId: '', postId: '' };\n      this.fetchComments();\n    },\n\n    // 选择评论时的回调\n    handleSelectionChange(selection) {\n      this.selectedComments = selection.map(comment => comment.id);\n    },\n\n    // 删除评论\n    async handleDelete(id) {\n      this.$confirm('确定要删除这条评论吗？', '提示', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            CommentAPI.deleteComment(id)\n              .then(() => {\n                this.$message.success('删除成功');\n                this.fetchComments();\n                done();\n              })\n              .catch(error => {\n                this.$message.error('删除失败');\n                console.error(error);\n              })\n              .finally(() => {\n                instance.confirmButtonLoading = false;\n              });\n          } else {\n            done();\n          }\n        }\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n\n    async confirmBatchDelete() {\n      if (this.selectedComments.length === 0) {\n        this.$message.warning('请选择要删除的评论');\n        return;\n      }\n\n      this.$confirm('确定要删除选中的评论吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      })\n        .then(async () => {\n          try {\n            await Promise.all(this.selectedComments.map(id => CommentAPI.deleteComment(id)));\n            this.fetchComments();\n            this.selectedComments = [];\n            this.$message.success('批量删除成功');\n          } catch (error) {\n            console.error('批量删除失败', error);\n            this.$message.error('批量删除失败');\n          }\n        })\n        .catch(() => { });\n    },\n\n    // 更新评论状态\n    async updateStatus(comment) {\n      try {\n        await CommentAPI.updateComment(comment);\n        this.$message.success('状态更新成功');\n      } catch (error) {\n        this.$message.error('更新状态失败');\n        console.error(error);\n      }\n    },\n\n    // 格式化时间\n    formatDate(date) {\n      return date ? new Date(date).toLocaleString() : \"无\";\n    },\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin-right: 5px;\n}\n\n.search-form {\n  margin-bottom: 0px;\n}\n\n.record-count {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #606266;\n}\n\n.action-row {\n  margin-bottom: 20px;\n}\n</style>\n"]}]}