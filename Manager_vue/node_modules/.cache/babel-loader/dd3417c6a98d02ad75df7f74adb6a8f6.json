{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/dashboard/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/dashboard/index.vue","mtime":1745308249743},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9oYXJ1a2EvSWRlYVByb2plY3RzL0F4b25peC9Gb2llc192dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkuanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvVXNlcnMvaGFydWthL0lkZWFQcm9qZWN0cy9BeG9uaXgvRm9pZXNfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2hhcnVrYS9JZGVhUHJvamVjdHMvQXhvbml4L0ZvaWVzX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9oYXJ1a2EvSWRlYVByb2plY3RzL0F4b25peC9Gb2llc192dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEYXNoYm9hcmQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50VGltZTogJycsCiAgICAgIHRpbWVyOiBudWxsLAogICAgICBzdGF0czogewogICAgICAgIHRvdGFsVXNlcnM6IDAsCiAgICAgICAgdmlwVXNlcnM6IDAsCiAgICAgICAgaGVscGluZm86IDAsCiAgICAgICAgYWlsb2c6IDAsCiAgICAgICAgbmF2bG9nOiAwLAogICAgICAgIHBvc3RpbmZvOiAwLAogICAgICAgIGNvbW1lbnRpbmZvOiAwLAogICAgICAgIG5vdGlmaWNhdGlvbnM6IDAsCiAgICAgICAgc29zaW5mbzogMCwKICAgICAgICBmZWVkYmFjazogMAogICAgICB9LAogICAgICByZWdpb25DaGFydDogbnVsbCwKICAgICAgZGlzYWJpbGl0eUNoYXJ0OiBudWxsLAogICAgICBub3RpZmljYXRpb25zOiBbXSwKICAgICAgLy8g5paw5aKe6YCa55+l5pWw5o2uCiAgICAgIG5vdGlmaWNhdGlvbkRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAvLyDmjqfliLblvLnnqpfmmL7npLoKICAgICAgc2VsZWN0ZWROb3RpZmljYXRpb246IHt9IC8vIOW9k+WJjemAieS4reeahOmAmuefpQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWyduYW1lJ10pKSwge30sIHsKICAgIGdyZWV0aW5nVGV4dDogZnVuY3Rpb24gZ3JlZXRpbmdUZXh0KCkgewogICAgICB2YXIgaG91ciA9IG5ldyBEYXRlKCkuZ2V0SG91cnMoKTsKICAgICAgaWYgKGhvdXIgPj0gNiAmJiBob3VyIDwgMTIpIHJldHVybiAn5pep5LiK5aW977yM546w5Zyo5pivJzsKICAgICAgaWYgKGhvdXIgPj0gMTIgJiYgaG91ciA8IDE0KSByZXR1cm4gJ+S4reWNiOWlve+8jOeOsOWcqOaYryc7CiAgICAgIGlmIChob3VyID49IDE0ICYmIGhvdXIgPCAxOCkgcmV0dXJuICfkuIvljYjlpb3vvIznjrDlnKjmmK8nOwogICAgICByZXR1cm4gJ+aZmuS4iuWlve+8jOeOsOWcqOaYryc7CiAgICB9LAogICAgY2FyZFN0eWxlOiBmdW5jdGlvbiBjYXJkU3R5bGUoKSB7CiAgICAgIHZhciBob3VyID0gbmV3IERhdGUoKS5nZXRIb3VycygpOwogICAgICByZXR1cm4gewogICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5nZXRCYWNrZ3JvdW5kQ29sb3IoaG91cikKICAgICAgfTsKICAgIH0sCiAgICBzdGF0VGFibGVEYXRhOiBmdW5jdGlvbiBzdGF0VGFibGVEYXRhKCkgewogICAgICByZXR1cm4gW3sKICAgICAgICBsYWJlbDogJ+aAu+eUqOaIt+aVsCcsCiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdHMudG90YWxVc2VycwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICdWSVAg55So5oi3JywKICAgICAgICB2YWx1ZTogdGhpcy5zdGF0cy52aXBVc2VycwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICfluK7liqnor7fmsYInLAogICAgICAgIHZhbHVlOiB0aGlzLnN0YXRzLmhlbHBpbmZvCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ0FJIOaXpeW/lycsCiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdHMuYWlsb2cKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAn5a+86Iiq5pel5b+XJywKICAgICAgICB2YWx1ZTogdGhpcy5zdGF0cy5uYXZsb2cKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAn6K665Z2b5biW5a2QJywKICAgICAgICB2YWx1ZTogdGhpcy5zdGF0cy5wb3N0aW5mbwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICfor4TorrrmlbAnLAogICAgICAgIHZhbHVlOiB0aGlzLnN0YXRzLmNvbW1lbnRpbmZvCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+mAmuefpeaVsCcsCiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdHMubm90aWZpY2F0aW9ucwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICdTT1Mg6YCa55+lJywKICAgICAgICB2YWx1ZTogdGhpcy5zdGF0cy5zb3NpbmZvCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+WPjemmiOaVsCcsCiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdHMuZmVlZGJhY2sKICAgICAgfV07CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgZ2V0QmFja2dyb3VuZENvbG9yOiBmdW5jdGlvbiBnZXRCYWNrZ3JvdW5kQ29sb3IoaG91cikgewogICAgICBpZiAoaG91ciA+PSA2ICYmIGhvdXIgPCAxMikgcmV0dXJuICcjNjdDMjNBJzsKICAgICAgaWYgKGhvdXIgPj0gMTIgJiYgaG91ciA8IDE0KSByZXR1cm4gJyNFNkEyM0MnOwogICAgICBpZiAoaG91ciA+PSAxNCAmJiBob3VyIDwgMTgpIHJldHVybiAnIzQwOUVGRic7CiAgICAgIHJldHVybiAnIzkwOTM5OSc7CiAgICB9LAogICAgdXBkYXRlVGltZTogZnVuY3Rpb24gdXBkYXRlVGltZSgpIHsKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHRoaXMuY3VycmVudFRpbWUgPSBub3cudG9Mb2NhbGVUaW1lU3RyaW5nKCd6aC1DTicsIHsKICAgICAgICBob3VyOiAnMi1kaWdpdCcsCiAgICAgICAgbWludXRlOiAnMi1kaWdpdCcsCiAgICAgICAgc2Vjb25kOiAnMi1kaWdpdCcKICAgICAgfSk7CiAgICB9LAogICAgZmV0Y2hTdGF0czogZnVuY3Rpb24gZmV0Y2hTdGF0cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0b3RhbFJlcywgdmlwUmVzLCBoZWxwUmVzLCBhaWxvZ1JlcywgbmF2bG9nUmVzLCBwb3N0aW5mb1JlcywgY29tbWVudGluZm9SZXMsIG5vdGlmaWNhdGlvbnNSZXMsIHNvc2luZm9SZXMsIGZlZWRiYWNrUmVzOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBpLnVzZXIuY291bnRVc2VycygpOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgdG90YWxSZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF90aGlzLnN0YXRzLnRvdGFsVXNlcnMgPSB0b3RhbFJlcy5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBpLnZpcC5jb3VudFZpcHMoe30pOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgdmlwUmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5zdGF0cy52aXBVc2VycyA9IHZpcFJlcy5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5oZWxwaW5mby5jb3VudEhlbHBSZXF1ZXN0cyh7fSk7CiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgaGVscFJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXMuc3RhdHMuaGVscGluZm8gPSBoZWxwUmVzLmRhdGE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBpLmFpbG9nLmNvdW50QWlMb2dzKHt9KTsKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBhaWxvZ1JlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXMuc3RhdHMuYWlsb2cgPSBhaWxvZ1Jlcy5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5uYXZsb2cuY291bnROYXZMb2dzKHt9KTsKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBuYXZsb2dSZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF90aGlzLnN0YXRzLm5hdmxvZyA9IG5hdmxvZ1Jlcy5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5wb3N0aW5mby5jb3VudEZvcnVtUG9zdHMoe30pOwogICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgIHBvc3RpbmZvUmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5zdGF0cy5wb3N0aW5mbyA9IHBvc3RpbmZvUmVzLmRhdGE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI3OwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBpLmNvbW1lbnRpbmZvLmNvdW50Q29tbWVudHMoe30pOwogICAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICAgIGNvbW1lbnRpbmZvUmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5zdGF0cy5jb21tZW50aW5mbyA9IGNvbW1lbnRpbmZvUmVzLmRhdGE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDMxOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBpLm5vdGlmaWNhdGlvbnMuY291bnROb3RpZmljYXRpb25zKHt9KTsKICAgICAgICAgICAgY2FzZSAzMToKICAgICAgICAgICAgICBub3RpZmljYXRpb25zUmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5zdGF0cy5ub3RpZmljYXRpb25zID0gbm90aWZpY2F0aW9uc1Jlcy5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5zb3NpbmZvLmNvdW50U29zTm90aWZpY2F0aW9ucyh7fSk7CiAgICAgICAgICAgIGNhc2UgMzU6CiAgICAgICAgICAgICAgc29zaW5mb1JlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXMuc3RhdHMuc29zaW5mbyA9IHNvc2luZm9SZXMuZGF0YTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzk7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRhcGkuZmVlZGJhY2suY291bnRGZWVkYmFja3Moe30pOwogICAgICAgICAgICBjYXNlIDM5OgogICAgICAgICAgICAgIGZlZWRiYWNrUmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5zdGF0cy5mZWVkYmFjayA9IGZlZWRiYWNrUmVzLmRhdGE7CiAgICAgICAgICAgICAgX3RoaXMuaW5pdENoYXJ0cygpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0ODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA0NDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNDQ7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCfmlbDmja7ojrflj5blpLHotKU6JywgX2NvbnRleHQudDApOwogICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfmlbDmja7liqDovb3lpLHotKXvvIzor7fnqI3lkI7ph43or5UnKTsKICAgICAgICAgICAgY2FzZSA0ODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgNDRdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoTm90aWZpY2F0aW9uczogZnVuY3Rpb24gZmV0Y2hOb3RpZmljYXRpb25zKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZXhhbXBsZSwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBleGFtcGxlID0ge307CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGFwaS5ub3RpZmljYXRpb25zLmdldE5vdGlmaWNhdGlvbnNCeUV4YW1wbGVXaXRoQkxPQnMoZXhhbXBsZSk7CiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIF90aGlzMi5ub3RpZmljYXRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCfojrflj5bpgJrnn6Xkv6Hmga/lpLHotKU6JywgX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+mAmuefpeS/oeaBr+WKoOi9veWksei0pe+8jOivt+eojeWQjumHjeivlScpOwogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNob3dOb3RpZmljYXRpb25EZXRhaWxzOiBmdW5jdGlvbiBzaG93Tm90aWZpY2F0aW9uRGV0YWlscyhub3RpZmljYXRpb24pIHsKICAgICAgdGhpcy5zZWxlY3RlZE5vdGlmaWNhdGlvbiA9IG5vdGlmaWNhdGlvbjsKICAgICAgdGhpcy5ub3RpZmljYXRpb25EaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBpbml0Q2hhcnRzOiBmdW5jdGlvbiBpbml0Q2hhcnRzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMy5pbml0UmVnaW9uQ2hhcnQoKTsKICAgICAgICBfdGhpczMuaW5pdERpc2FiaWxpdHlDaGFydCgpOwogICAgICB9KTsKICAgIH0sCiAgICBpbml0UmVnaW9uQ2hhcnQ6IGZ1bmN0aW9uIGluaXRSZWdpb25DaGFydCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlcywgcmF3RGF0YSwgcHJvdmluY2VEYXRhLCBjaGFydERhdGEsIG9wdGlvbjsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LiRhcGkudXNlci5nZXRVc2Vycyh7CiAgICAgICAgICAgICAgICBmaWVsZHM6IFsncHJvdmluY2UnXQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmF3RGF0YSA9IEFycmF5LmlzQXJyYXkocmVzLmRhdGEpID8gcmVzLmRhdGEgOiBbXTsKICAgICAgICAgICAgICBwcm92aW5jZURhdGEgPSBfdGhpczQucHJvY2Vzc1Byb3ZpbmNlRGF0YShyYXdEYXRhKTsKICAgICAgICAgICAgICBjaGFydERhdGEgPSBPYmplY3QuZW50cmllcyhwcm92aW5jZURhdGEpLm1hcChmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICAgICAgICAgIG5hbWUgPSBfcmVmMlswXSwKICAgICAgICAgICAgICAgICAgdmFsdWUgPSBfcmVmMlsxXTsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBfdGhpczQucmVnaW9uQ2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlZ2lvbkNoYXJ0JykpOwogICAgICAgICAgICAgIG9wdGlvbiA9IF90aGlzNC5nZXRSZWdpb25PcHRpb24oY2hhcnREYXRhKTsKICAgICAgICAgICAgICBfdGhpczQucmVnaW9uQ2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczQucmVnaW9uQ2hhcnQucmVzaXplKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDEzOwogICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCflnLDljLrliIbluIPlm77ooajliqDovb3lpLHotKU6JywgX2NvbnRleHQzLnQwKTsKICAgICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UuZXJyb3IoJ+WcsOWMuuaVsOaNruWKoOi9veWksei0pScpOwogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDEzXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBpbml0RGlzYWJpbGl0eUNoYXJ0OiBmdW5jdGlvbiBpbml0RGlzYWJpbGl0eUNoYXJ0KCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgcmVzLCByYXdEYXRhLCBkaXNhYmlsaXR5RGF0YSwgY2hhcnREYXRhLCBvcHRpb247CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS4kYXBpLnVzZXIuZ2V0VXNlcnMoewogICAgICAgICAgICAgICAgZmllbGRzOiBbJ2Rpc2FiaWxpdHlfdHlwZSddCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICByYXdEYXRhID0gQXJyYXkuaXNBcnJheShyZXMuZGF0YSkgPyByZXMuZGF0YSA6IFtdOwogICAgICAgICAgICAgIGRpc2FiaWxpdHlEYXRhID0gX3RoaXM1LnByb2Nlc3NEaXNhYmlsaXR5RGF0YShyYXdEYXRhKTsKICAgICAgICAgICAgICBjaGFydERhdGEgPSBPYmplY3QuZW50cmllcyhkaXNhYmlsaXR5RGF0YSkubWFwKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgICAgICAgICAgdmFyIF9yZWY0ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjMsIDIpLAogICAgICAgICAgICAgICAgICBuYW1lID0gX3JlZjRbMF0sCiAgICAgICAgICAgICAgICAgIHZhbHVlID0gX3JlZjRbMV07CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX3RoaXM1LmRpc2FiaWxpdHlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlzYWJpbGl0eUNoYXJ0JykpOwogICAgICAgICAgICAgIG9wdGlvbiA9IF90aGlzNS5nZXREaXNhYmlsaXR5T3B0aW9uKGNoYXJ0RGF0YSk7CiAgICAgICAgICAgICAgX3RoaXM1LmRpc2FiaWxpdHlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5kaXNhYmlsaXR5Q2hhcnQucmVzaXplKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDEzOwogICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCfmrovpmpznsbvlnovlm77ooajliqDovb3lpLHotKU6JywgX2NvbnRleHQ0LnQwKTsKICAgICAgICAgICAgICBfdGhpczUuJG1lc3NhZ2UuZXJyb3IoJ+aui+manOaVsOaNruWKoOi9veWksei0pScpOwogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDEzXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwcm9jZXNzUHJvdmluY2VEYXRhOiBmdW5jdGlvbiBwcm9jZXNzUHJvdmluY2VEYXRhKHVzZXJzKSB7CiAgICAgIHJldHVybiB1c2Vycy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgdXNlcikgewogICAgICAgIHZhciBfdXNlciRwcm92aW5jZTsKICAgICAgICB2YXIgcHJvdmluY2UgPSAodXNlciA9PT0gbnVsbCB8fCB1c2VyID09PSB2b2lkIDAgfHwgKF91c2VyJHByb3ZpbmNlID0gdXNlci5wcm92aW5jZSkgPT09IG51bGwgfHwgX3VzZXIkcHJvdmluY2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF91c2VyJHByb3ZpbmNlLnRyaW0oKSkgfHwgJ+acquefpeWcsOWMuic7CiAgICAgICAgYWNjW3Byb3ZpbmNlXSA9IChhY2NbcHJvdmluY2VdIHx8IDApICsgMTsKICAgICAgICByZXR1cm4gYWNjOwogICAgICB9LCB7fSk7CiAgICB9LAogICAgcHJvY2Vzc0Rpc2FiaWxpdHlEYXRhOiBmdW5jdGlvbiBwcm9jZXNzRGlzYWJpbGl0eURhdGEodXNlcnMpIHsKICAgICAgdmFyIHR5cGVNYXAgPSB7CiAgICAgICAgMDogJ+aXoOmanOeijScsCiAgICAgICAgMTogJ+inhumanCcsCiAgICAgICAgMjogJ+WQrOmanCcsCiAgICAgICAgMzogJ+WFtuS7lumanOeijScKICAgICAgfTsKICAgICAgcmV0dXJuIHVzZXJzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCB1c2VyKSB7CiAgICAgICAgdmFyIF91c2VyJGRpc2FiaWxpdHlUeXBlOwogICAgICAgIHZhciB0eXBlID0gKF91c2VyJGRpc2FiaWxpdHlUeXBlID0gdXNlci5kaXNhYmlsaXR5VHlwZSkgIT09IG51bGwgJiYgX3VzZXIkZGlzYWJpbGl0eVR5cGUgIT09IHZvaWQgMCA/IF91c2VyJGRpc2FiaWxpdHlUeXBlIDogMzsKICAgICAgICB2YXIgbGFiZWwgPSB0eXBlTWFwW3R5cGVdIHx8ICflhbbku5bpmpznoo0nOwogICAgICAgIGFjY1tsYWJlbF0gPSAoYWNjW2xhYmVsXSB8fCAwKSArIDE7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwge30pOwogICAgfSwKICAgIGdldFJlZ2lvbk9wdGlvbjogZnVuY3Rpb24gZ2V0UmVnaW9uT3B0aW9uKGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+eUqOaIt+WcsOWMuuWIhuW4gycsCiAgICAgICAgICBzdWJ0ZXh0OiAiXHU1MTcxXHU3RURGXHU4QkExICIuY29uY2F0KGRhdGEucmVkdWNlKGZ1bmN0aW9uIChzdW0sIGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIHN1bSArIGl0ZW0udmFsdWU7CiAgICAgICAgICB9LCAwKSwgIiBcdTRGNERcdTc1MjhcdTYyMzciKSwKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgdG9wOiAnNSUnLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAnIzY2NicsCiAgICAgICAgICAgIGZvbnRTaXplOiAxNgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9IDoge2N9ICh7ZH0lKScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgdHlwZTogJ3Njcm9sbCcsCiAgICAgICAgICBvcmllbnQ6ICd2ZXJ0aWNhbCcsCiAgICAgICAgICBsZWZ0OiAnbGVmdCcsCiAgICAgICAgICB0b3A6ICcxNSUnLAogICAgICAgICAgYm90dG9tOiAnMTUlJywKICAgICAgICAgIGl0ZW1HYXA6IDgsCiAgICAgICAgICBpdGVtV2lkdGg6IDE0LAogICAgICAgICAgaXRlbUhlaWdodDogMTQsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjNjY2JywKICAgICAgICAgICAgZm9udFNpemU6IDEyCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn5Zyw5Yy65YiG5biDJywKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiBbJzM1JScsICc2NSUnXSwKICAgICAgICAgIGNlbnRlcjogWyc1NSUnLCAnNTUlJ10sCiAgICAgICAgICBkYXRhOiBkYXRhLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlOwogICAgICAgICAgfSksCiAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIGJvcmRlclJhZGl1czogNiwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjZmZmJywKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIKICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7Ynx7Yn19IFxuIHtwZXJ8e2R9JX0nLAogICAgICAgICAgICBwb3NpdGlvbjogJ291dGVyJywKICAgICAgICAgICAgYWxpZ25UbzogJ2VkZ2UnLAogICAgICAgICAgICBtYXJnaW46IDEwMCwKICAgICAgICAgICAgcmljaDogewogICAgICAgICAgICAgIGI6IHsKICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxMiwKICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IDIwCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBwZXI6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzk5OScsCiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTAKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBjb2xvcjogWycjNTQ3MEM2JywgJyM5MUNDNzUnLCAnI0ZBQzg1OCcsICcjRUU2NjY2JywgJyM3M0MwREUnLCAnIzNCQTI3MicsICcjRkM4NDUyJywgJyM5QTYwQjQnXQogICAgICAgIH1dCiAgICAgIH07CiAgICB9LAogICAgZ2V0RGlzYWJpbGl0eU9wdGlvbjogZnVuY3Rpb24gZ2V0RGlzYWJpbGl0eU9wdGlvbihkYXRhKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfmrovpmpznsbvlnovliIbluIMnLAogICAgICAgICAgc3VidGV4dDogIlx1NjAzQlx1NzUyOFx1NjIzN1x1NjU3MDogIi5jb25jYXQoZGF0YS5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgaXRlbSkgewogICAgICAgICAgICByZXR1cm4gc3VtICsgaXRlbS52YWx1ZTsKICAgICAgICAgIH0sIDApKSwKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAnIzY2NicsCiAgICAgICAgICAgIGZvbnRTaXplOiAxNgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgZm9ybWF0dGVyOiAne2F9PGJyLz57Yn06IHtjfSAoe2R9JSknCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJywKICAgICAgICAgIGxlZnQ6ICdsZWZ0JywKICAgICAgICAgIHRvcDogJ21pZGRsZScsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjNjY2JwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+aui+manOexu+WeiycsCiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIHJhZGl1czogJzU1JScsCiAgICAgICAgICBjZW50ZXI6IFsnNTAlJywgJzYwJSddLAogICAgICAgICAgZGF0YTogZGF0YS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgIHJldHVybiBiLnZhbHVlIC0gYS52YWx1ZTsKICAgICAgICAgIH0pLAogICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMCwKICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBib3JkZXJSYWRpdXM6IDYsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnI2ZmZicsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyCiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgZm9ybWF0dGVyOiAne2J8e2J9fVxue3Blcnx7ZH0lfScsCiAgICAgICAgICAgIHJpY2g6IHsKICAgICAgICAgICAgICBiOiB7CiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTIsCiAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAyMAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgcGVyOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJyM5OTknLAogICAgICAgICAgICAgICAgZm9udFNpemU6IDEwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgY29sb3I6IFsnIzY3QzIzQScsCiAgICAgICAgICAvLyDml6Dpmpznoo0KICAgICAgICAgICcjNDA5RUZGJywKICAgICAgICAgIC8vIOinhumanAogICAgICAgICAgJyNFNkEyM0MnLAogICAgICAgICAgLy8g5ZCs6ZqcCiAgICAgICAgICAnI0Y1NkM2QycgLy8g5YW25LuW6Zqc56KNCiAgICAgICAgICBdCiAgICAgICAgfV0KICAgICAgfTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnVwZGF0ZVRpbWUoKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLnVwZGF0ZVRpbWUsIDEwMDApOwogICAgdGhpcy5mZXRjaFN0YXRzKCk7CiAgICB0aGlzLmZldGNoTm90aWZpY2F0aW9ucygpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgICBpZiAodGhpcy5yZWdpb25DaGFydCkgdGhpcy5yZWdpb25DaGFydC5kaXNwb3NlKCk7CiAgICBpZiAodGhpcy5kaXNhYmlsaXR5Q2hhcnQpIHRoaXMuZGlzYWJpbGl0eUNoYXJ0LmRpc3Bvc2UoKTsKICB9Cn07"},{"version":3,"names":["mapGetters","echarts","name","data","currentTime","timer","stats","totalUsers","vipUsers","helpinfo","ailog","navlog","postinfo","commentinfo","notifications","sosinfo","feedback","regionChart","disabilityChart","notificationDialogVisible","selectedNotification","computed","_objectSpread","greetingText","hour","Date","getHours","cardStyle","backgroundColor","getBackgroundColor","statTableData","label","value","methods","updateTime","now","toLocaleTimeString","minute","second","fetchStats","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","totalRes","vipRes","helpRes","ailogRes","navlogRes","postinfoRes","commentinfoRes","notificationsRes","sosinfoRes","feedbackRes","wrap","_callee$","_context","prev","next","$api","user","countUsers","sent","vip","countVips","countHelpRequests","countAiLogs","countNavLogs","countForumPosts","countComments","countNotifications","countSosNotifications","countFeedbacks","initCharts","t0","console","error","$message","stop","fetchNotifications","_this2","_callee2","example","response","_callee2$","_context2","getNotificationsByExampleWithBLOBs","showNotificationDetails","notification","_this3","$nextTick","initRegionChart","initDisabilityChart","_this4","_callee3","res","rawData","provinceData","chartData","option","_callee3$","_context3","getUsers","fields","Array","isArray","processProvinceData","Object","entries","map","_ref","_ref2","_slicedToArray","init","document","getElementById","getRegionOption","setOption","window","addEventListener","resize","_this5","_callee4","disabilityData","_callee4$","_context4","processDisabilityData","_ref3","_ref4","getDisabilityOption","users","reduce","acc","_user$province","province","trim","typeMap","_user$disabilityType","type","disabilityType","title","text","subtext","concat","sum","item","left","top","textStyle","color","fontSize","tooltip","trigger","formatter","legend","orient","bottom","itemGap","itemWidth","itemHeight","series","radius","center","sort","a","b","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","borderRadius","borderColor","borderWidth","position","alignTo","margin","rich","lineHeight","per","mounted","setInterval","beforeDestroy","clearInterval","dispose"],"sources":["src/views/dashboard/index.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <el-row :gutter=\"20\">\n      <!-- 管理员信息卡片 -->\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"16\" :lg=\"16\">\n        <el-card class=\"admin-card\" :style=\"cardStyle\">\n          <div class=\"admin-profile\">\n            <div class=\"avatar-wrapper\">\n              <svg-icon icon-class=\"user\" class=\"user-icon\" />\n              <div class=\"online-indicator\"></div>\n            </div>\n            <div class=\"admin-meta\">\n              <div class=\"title-group\">\n                <span class=\"admin-badge\">系统管理员</span>\n                <h1 class=\"admin-name\">{{ name }}</h1>\n              </div>\n              <div class=\"time-group\">\n                <div class=\"greeting\">\n                  <span class=\"greeting-icon\">👋</span>\n                  <span class=\"greeting-text\">{{ greetingText }}</span>\n                </div>\n                <div class=\"current-time\">\n                  <span class=\"time-icon\">🕒</span>\n                  <span class=\"time-value\">{{ currentTime }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n        <!-- 通知信息卡片 -->\n        <!-- 修改后的通知信息卡片 -->\n        <el-card class=\"notifications-card\" shadow=\"hover\" style=\"margin-top: 20px;\">\n          <h3>通知信息</h3>\n          <div class=\"notifications-table-wrapper\">\n            <el-table \n              :data=\"notifications\" \n              border \n              style=\"width: 100%\"\n              max-height=\"300\">  <!-- 新增max-height属性 -->\n              <el-table-column \n                prop=\"title\" \n                label=\"通知标题\" \n                align=\"center\">\n                <template #default=\"scope\">\n                  <el-link \n                    type=\"primary\" \n                    @click=\"showNotificationDetails(scope.row)\">\n                    {{ scope.row.title }}\n                  </el-link>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 统计卡片组 -->\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"8\" :lg=\"8\" class=\"stat-cards\">\n        <el-card class=\"stat-card\" shadow=\"hover\">\n          <div class=\"stat-content\">\n            <div class=\"stat-title\"></div>\n            <el-table :data=\"statTableData\" border style=\"width: 100%\">\n              <el-table-column prop=\"label\" label=\"统计项\" align=\"center\"></el-table-column>\n              <el-table-column prop=\"value\" label=\"数量\" align=\"center\"></el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 修改后的图表展示区域 -->\n    <el-row :gutter=\"20\">\n      <el-col :span=\"14\">\n        <el-card shadow=\"hover\">\n          <div id=\"regionChart\" style=\"height: 400px;\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-card shadow=\"hover\">\n          <div id=\"disabilityChart\" style=\"height: 400px;\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 通知详情弹窗 -->\n    <el-dialog \n      title=\"通知详情\" \n      :visible.sync=\"notificationDialogVisible\" \n      width=\"50%\">\n      <p>{{ selectedNotification.content }}</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"notificationDialogVisible = false\">关闭</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n\n<script>\nimport { mapGetters } from 'vuex'\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      currentTime: '',\n      timer: null,\n      stats: {\n        totalUsers: 0,\n        vipUsers: 0,\n        helpinfo: 0,\n        ailog: 0,\n        navlog: 0,\n        postinfo: 0,\n        commentinfo: 0,\n        notifications: 0,\n        sosinfo: 0,\n        feedback: 0\n      },\n      regionChart: null,\n      disabilityChart: null,\n      notifications: [], // 新增通知数据\n      notificationDialogVisible: false, // 控制弹窗显示\n      selectedNotification: {}, // 当前选中的通知\n    }\n  },\n  computed: {\n    ...mapGetters(['name']),\n    greetingText() {\n      const hour = new Date().getHours()\n      if (hour >= 6 && hour < 12) return '早上好，现在是'\n      if (hour >= 12 && hour < 14) return '中午好，现在是'\n      if (hour >= 14 && hour < 18) return '下午好，现在是'\n      return '晚上好，现在是'\n    },\n    cardStyle() {\n      const hour = new Date().getHours()\n      return {\n        backgroundColor: this.getBackgroundColor(hour)\n      }\n    },\n    statTableData() {\n      return [\n        { label: '总用户数', value: this.stats.totalUsers },\n        { label: 'VIP 用户', value: this.stats.vipUsers },\n        { label: '帮助请求', value: this.stats.helpinfo },\n        { label: 'AI 日志', value: this.stats.ailog },\n        { label: '导航日志', value: this.stats.navlog },\n        { label: '论坛帖子', value: this.stats.postinfo },\n        { label: '评论数', value: this.stats.commentinfo },\n        { label: '通知数', value: this.stats.notifications },\n        { label: 'SOS 通知', value: this.stats.sosinfo },\n        { label: '反馈数', value: this.stats.feedback }\n      ]\n    }\n  },\n  methods: {\n    getBackgroundColor(hour) {\n      if (hour >= 6 && hour < 12) return '#67C23A'\n      if (hour >= 12 && hour < 14) return '#E6A23C'\n      if (hour >= 14 && hour < 18) return '#409EFF'\n      return '#909399'\n    },\n    updateTime() {\n      const now = new Date()\n      this.currentTime = now.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    },\n    async fetchStats() {\n      try {\n        const totalRes = await this.$api.user.countUsers()\n        this.stats.totalUsers = totalRes.data\n\n        const vipRes = await this.$api.vip.countVips({})\n        this.stats.vipUsers = vipRes.data\n\n        const helpRes = await this.$api.helpinfo.countHelpRequests({})\n        this.stats.helpinfo = helpRes.data\n\n        const ailogRes = await this.$api.ailog.countAiLogs({})\n        this.stats.ailog = ailogRes.data\n\n        const navlogRes = await this.$api.navlog.countNavLogs({})\n        this.stats.navlog = navlogRes.data\n\n        const postinfoRes = await this.$api.postinfo.countForumPosts({})\n        this.stats.postinfo = postinfoRes.data\n\n        const commentinfoRes = await this.$api.commentinfo.countComments({})\n        this.stats.commentinfo = commentinfoRes.data\n\n        const notificationsRes = await this.$api.notifications.countNotifications({})\n        this.stats.notifications = notificationsRes.data\n\n        const sosinfoRes = await this.$api.sosinfo.countSosNotifications({})\n        this.stats.sosinfo = sosinfoRes.data\n\n        const feedbackRes = await this.$api.feedback.countFeedbacks({})\n        this.stats.feedback = feedbackRes.data\n\n        this.initCharts()\n      } catch (error) {\n        console.error('数据获取失败:', error)\n        this.$message.error('数据加载失败，请稍后重试')\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const example = {};\n        const response = await this.$api.notifications.getNotificationsByExampleWithBLOBs(example);\n        this.notifications = response.data;\n      } catch (error) {\n        console.error('获取通知信息失败:', error);\n        this.$message.error('通知信息加载失败，请稍后重试');\n      }\n    },\n    showNotificationDetails(notification) {\n      this.selectedNotification = notification;\n      this.notificationDialogVisible = true;\n    },\n    initCharts() {\n      this.$nextTick(() => {\n        this.initRegionChart()\n        this.initDisabilityChart()\n      })\n    },\n    async initRegionChart() {\n      try {\n        const res = await this.$api.user.getUsers({\n          fields: ['province']\n        })\n\n        const rawData = Array.isArray(res.data) ? res.data : []\n        const provinceData = this.processProvinceData(rawData)\n        const chartData = Object.entries(provinceData).map(([name, value]) => ({\n          name,\n          value\n        }))\n\n        this.regionChart = echarts.init(document.getElementById('regionChart'))\n        const option = this.getRegionOption(chartData)\n        this.regionChart.setOption(option)\n\n        window.addEventListener('resize', () => this.regionChart.resize())\n      } catch (error) {\n        console.error('地区分布图表加载失败:', error)\n        this.$message.error('地区数据加载失败')\n      }\n    },\n    async initDisabilityChart() {\n      try {\n        const res = await this.$api.user.getUsers({\n          fields: ['disability_type']\n        })\n\n        const rawData = Array.isArray(res.data) ? res.data : []\n        const disabilityData = this.processDisabilityData(rawData)\n        const chartData = Object.entries(disabilityData).map(([name, value]) => ({\n          name,\n          value\n        }))\n\n        this.disabilityChart = echarts.init(document.getElementById('disabilityChart'))\n        const option = this.getDisabilityOption(chartData)\n        this.disabilityChart.setOption(option)\n\n        window.addEventListener('resize', () => this.disabilityChart.resize())\n      } catch (error) {\n        console.error('残障类型图表加载失败:', error)\n        this.$message.error('残障数据加载失败')\n      }\n    },\n    processProvinceData(users) {\n      return users.reduce((acc, user) => {\n        const province = user?.province?.trim() || '未知地区'\n        acc[province] = (acc[province] || 0) + 1\n        return acc\n      }, {})\n    },\n    processDisabilityData(users) {\n      const typeMap = {\n        0: '无障碍',\n        1: '视障',\n        2: '听障',\n        3: '其他障碍'\n      }\n\n      return users.reduce((acc, user) => {\n        const type = user.disabilityType ?? 3 \n        const label = typeMap[type] || '其他障碍'\n        acc[label] = (acc[label] || 0) + 1\n        return acc\n      }, {})\n    },\n    getRegionOption(data) {\n      return {\n        title: {\n          text: '用户地区分布',\n          subtext: `共统计 ${data.reduce((sum, item) => sum + item.value, 0)} 位用户`,\n          left: 'center',\n          top: '5%',\n          textStyle: {\n            color: '#666',\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          left: 'left',\n          top: '15%',\n          bottom: '15%',\n          itemGap: 8,\n          itemWidth: 14,\n          itemHeight: 14,\n          textStyle: {\n            color: '#666',\n            fontSize: 12\n          }\n        },\n        series: [{\n          name: '地区分布',\n          type: 'pie',\n          radius: ['35%', '65%'],\n          center: ['55%', '55%'],\n          data: data.sort((a, b) => b.value - a.value),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          itemStyle: {\n            borderRadius: 6,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            formatter: '{b|{b}} \\n {per|{d}%}',\n            position: 'outer',\n            alignTo: 'edge',\n            margin: 100,\n            rich: {\n              b: { fontSize: 12, lineHeight: 20 },\n              per: { color: '#999', fontSize: 10 }\n            }\n          },\n          color: [\n            '#5470C6', '#91CC75', '#FAC858', '#EE6666',\n            '#73C0DE', '#3BA272', '#FC8452', '#9A60B4'\n          ]\n        }]\n      }\n    },\n    getDisabilityOption(data) {\n      return {\n        title: {\n          text: '残障类型分布',\n          subtext: `总用户数: ${data.reduce((sum, item) => sum + item.value, 0)}`,\n          left: 'center',\n          textStyle: {\n            color: '#666',\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a}<br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          top: 'middle',\n          textStyle: {\n            color: '#666'\n          }\n        },\n        series: [{\n          name: '残障类型',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: data.sort((a, b) => b.value - a.value),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          itemStyle: {\n            borderRadius: 6,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            formatter: '{b|{b}}\\n{per|{d}%}',\n            rich: {\n              b: { fontSize: 12, lineHeight: 20 },\n              per: { color: '#999', fontSize: 10 }\n            }\n          },\n          color: [\n            '#67C23A', // 无障碍\n            '#409EFF', // 视障\n            '#E6A23C', // 听障\n            '#F56C6C'  // 其他障碍\n          ]\n        }]\n      }\n    }\n  },\n  mounted() {\n    this.updateTime()\n    this.timer = setInterval(this.updateTime, 1000)\n    this.fetchStats()\n    this.fetchNotifications();\n  },\n  beforeDestroy() {\n    clearInterval(this.timer)\n    if (this.regionChart) this.regionChart.dispose()\n    if (this.disabilityChart) this.disabilityChart.dispose()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .admin-card {\n    height: 200px;\n  }\n  .notifications-card {\n    height: 425px;\n  }\n\n  .notifications-card {\n    display: flex;\n    flex-direction: column;\n\n    h3 {\n      font-size: 18px;\n      font-weight: bold;\n      margin-bottom: 16px;\n    }\n\n    .notifications-table-wrapper {\n      flex: 1;\n      overflow-y: auto;\n    }\n  }\n\n  .stat-cards {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .dashboard-container .admin-card,\n  .dashboard-container .notifications-card,\n  .dashboard-container .stat-card {\n    height: auto;\n  }\n}\n\n.dashboard-container {\n  padding: 20px;\n\n  .admin-card {\n    margin-bottom: 30px;\n    border-radius: 16px;\n    overflow: hidden;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);\n    background: linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.05) 100%);\n    backdrop-filter: blur(8px);\n    border: 1px solid rgba(255,255,255,0.2);\n\n    .admin-profile {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 24px;\n      padding: 24px;\n      align-items: center;\n\n      .avatar-wrapper {\n        position: relative;\n        .user-icon {\n          width: 80px;\n          height: 80px;\n          color: rgba(255,255,255,0.9);\n          filter: drop-shadow(0 4px 12px rgba(0,0,0,0.1));\n        }\n        .online-indicator {\n          position: absolute;\n          right: 0;\n          bottom: 0;\n          width: 16px;\n          height: 16px;\n          background: #67C23A;\n          border: 2px solid #fff;\n          border-radius: 50%;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n      }\n\n      .admin-meta {\n        .title-group {\n          margin-bottom: 16px;\n          .admin-badge {\n            display: inline-block;\n            background: rgba(255,255,255,0.15);\n            color: rgba(255,255,255,0.9);\n            padding: 4px 12px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: 600;\n            letter-spacing: 0.5px;\n            backdrop-filter: blur(4px);\n            margin-bottom: 8px;\n          }\n          .admin-name {\n            font-size: 32px;\n            font-weight: 700;\n            color: rgba(255,255,255,0.95);\n            letter-spacing: -0.5px;\n            margin: 0;\n            line-height: 1.2;\n          }\n        }\n\n        .time-group {\n          display: grid;\n          gap: 8px;\n          .greeting, .current-time {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            font-size: 16px;\n            color: rgba(255,255,255,0.85);\n            .greeting-icon, .time-icon {\n              font-size: 20px;\n            }\n            .time-value {\n              font-family: 'Courier New', monospace;\n              font-weight: 600;\n              letter-spacing: 1px;\n            }\n          }\n        }\n      }\n    }\n\n    &:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 12px 32px rgba(0, 0, 0, 0.2);\n    }\n  }\n\n  .stat-cards {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end; // 使统计卡片组与管理员信息卡片底部对齐\n    height: 100%; // 确保统计卡片组占满可用高度\n\n    .stat-card {\n      flex: 1; // 使统计卡片高度更小\n      margin-bottom: 0; // 去掉多余的间距\n    }\n  }\n\n  .stat-cards {\n    height: 100%; // 使统计卡片组高度与管理员信息卡片一致\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; // 确保内容均匀分布\n\n    .stat-card {\n      flex-grow: 1; // 使统计卡片填充可用空间\n      margin-bottom: 0; // 去掉多余的间距\n    }\n  }\n\n  .stat-cards {\n    margin-top: 20px;\n\n    .stat-card {\n      margin-bottom: 20px;\n      transition: transform 0.3s ease, box-shadow 0.3s ease;\n      background: linear-gradient(135deg, #f5f7fa, #ffffff);\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\n      &:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n      }\n\n      .stat-content {\n        padding: 20px;\n        text-align: center;\n\n        .stat-title {\n          font-size: 18px;\n          font-weight: bold;\n          color: #303133;\n          margin-bottom: 16px;\n          border-bottom: 1px solid #ebeef5;\n          padding-bottom: 8px;\n        }\n\n        .stat-list {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n\n          li {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 8px 0;\n            border-bottom: 1px dashed #ebeef5;\n\n            &:last-child {\n              border-bottom: none;\n            }\n\n            .stat-label {\n              font-size: 14px;\n              color: #606266;\n              font-weight: 500;\n            }\n\n            .stat-value {\n              font-size: 16px;\n              color: #409EFF;\n              font-weight: bold;\n            }\n          }\n        }\n\n        el-table {\n          margin-top: 16px;\n          font-size: 14px;\n\n          .el-table__header-wrapper {\n            background-color: #f5f7fa;\n          }\n\n          .el-table__row {\n            &:hover {\n              background-color: #f0f9ff;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .stat-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    font-size: 16px;\n    color: #303133;\n\n    li {\n      margin-bottom: 8px;\n      display: flex;\n      justify-content: space-between;\n\n      span:first-child {\n        font-weight: bold;\n        color: #606266;\n      }\n    }\n  }\n\n  #regionChart,\n  #disabilityChart {\n    height: 400px;\n    width: 100%;\n    background: rgba(255,255,255,0.9);\n    border-radius: 8px;\n    box-shadow: 0 2px 12px rgba(0,0,0,0.1);\n  }\n\n  .notifications-card {\n    padding: 20px;\n    border-radius: 12px;\n    background: #fff;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n\n    h3 {\n      font-size: 18px;\n      font-weight: bold;\n      margin-bottom: 16px;\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .el-col {\n    width: 100% !important;\n    margin-bottom: 20px;\n    \n    #regionChart,\n    #disabilityChart {\n      height: 300px;\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}