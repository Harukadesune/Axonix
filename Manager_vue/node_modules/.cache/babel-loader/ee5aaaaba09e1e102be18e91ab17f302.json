{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Commentinfo/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Commentinfo/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CommentAPI","data","comments","totalRecords","selectedComments","searchForm","content","userId","postId","dialogVisible","statusMap","created","fetchComments","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","example","response","countResponse","wrap","_callee$","_context","prev","next","oredCriteria","criteria","push","condition","value","concat","singleValue","getCommentsByExampleWithBlobs","sent","countComments","t0","console","error","stop","resetSearch","handleSelectionChange","selection","map","comment","id","handleDelete","_this2","_callee2","_callee2$","_context2","$confirm","type","cancelButtonText","confirmButtonText","beforeClose","action","instance","done","confirmButtonLoading","deleteComment","then","$message","success","catch","finally","info","confirmBatchDelete","_this3","_callee4","_callee4$","_context4","length","warning","abrupt","_callee3","_callee3$","_context3","Promise","all","updateStatus","_this4","_callee5","_callee5$","_context5","updateComment","formatDate","date","Date","toLocaleString"],"sources":["src/views/Commentinfo/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索表单 -->\n    <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n      <el-form-item label=\"内容\">\n        <el-input v-model=\"searchForm.content\" placeholder=\"请输入评论内容\" clearable />\n      </el-form-item>\n      <el-form-item label=\"用户ID\">\n        <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n      </el-form-item>\n      <el-form-item label=\"帖子ID\">\n        <el-input v-model=\"searchForm.postId\" placeholder=\"请输入帖子ID\" clearable />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"fetchComments\">查询</el-button>\n        <el-button @click=\"resetSearch\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮和记录数显示 -->\n    <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n      <el-col :span=\"8\">\n        <el-button type=\"danger\" @click=\"confirmBatchDelete\" :disabled=\"selectedComments.length === 0\">批量删除</el-button>\n      </el-col>\n      <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n        <span>当前共有 {{ totalRecords }} 条记录</span>\n      </el-col>\n    </el-row>\n\n    <!-- 评论表格 -->\n    <el-table :data=\"comments\" border @selection-change=\"handleSelectionChange\" :empty-text=\"'没有数据'\">\n      <el-table-column type=\"selection\" width=\"50\" />\n      <el-table-column prop=\"id\" label=\"ID\" />\n      <el-table-column prop=\"userId\" label=\"用户ID\" />\n      <el-table-column prop=\"postId\" label=\"帖子ID\" />\n      <el-table-column prop=\"likes\" label=\"点赞数\" />\n      <el-table-column prop=\"dislikes\" label=\"点踩数\" />\n      <el-table-column prop=\"createdAt\" label=\"创建时间\">\n        <template slot-scope=\"scope\">{{ formatDate(scope.row.createdAt) }}</template>\n      </el-table-column>\n      <el-table-column prop=\"content\" label=\"评论内容\">\n        <template slot-scope=\"scope\">{{ scope.row.content }}</template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"审核状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-select v-model=\"scope.row.status\" @change=\"updateStatus(scope.row)\" size=\"small\">\n            <el-option v-for=\"(label, value) in statusMap\" :key=\"value\" :label=\"label\" :value=\"value\" />\n          </el-select>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 批量删除确认框 -->\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"确认删除\" width=\"400px\">\n      <span>确定要删除选中的评论吗？</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleBatchDelete\">确定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport CommentAPI from '@/api/commentinfo_api';\n\nexport default {\n  data() {\n    return {\n      comments: [],\n      totalRecords: 0,\n      selectedComments: [],\n      searchForm: {\n        content: '',\n        userId: '',\n        postId: ''\n      },\n      dialogVisible: false,\n      statusMap: {\n        0: '审核中',\n        1: '驳回',\n        2: '异常',\n        3: '已发布',\n        4: '私密'\n      }\n    };\n  },\n  created() {\n    this.fetchComments();\n  },\n  methods: {\n    async fetchComments() {\n      const example = {\n        oredCriteria: [{ criteria: [] }]\n      };\n\n      if (this.searchForm.content) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"content LIKE\",\n          value: `%${this.searchForm.content}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.userId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"user_id =\",\n          value: this.searchForm.userId,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.postId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"postId =\",\n          value: this.searchForm.postId,\n          singleValue: true\n        });\n      }\n\n      try {\n        const response = await CommentAPI.getCommentsByExampleWithBlobs(example);\n        this.comments = response.data;\n\n        const countResponse = await CommentAPI.countComments(example);\n        this.totalRecords = countResponse.data;\n      } catch (error) {\n        console.error('获取评论列表失败', error);\n      }\n    },\n\n    // 重置搜索\n    resetSearch() {\n      this.searchForm = { content: '', userId: '', postId: '' };\n      this.fetchComments();\n    },\n\n    // 选择评论时的回调\n    handleSelectionChange(selection) {\n      this.selectedComments = selection.map(comment => comment.id);\n    },\n\n    // 删除评论\n    async handleDelete(id) {\n      this.$confirm('确定要删除这条评论吗？', '提示', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            CommentAPI.deleteComment(id)\n              .then(() => {\n                this.$message.success('删除成功');\n                this.fetchComments();\n                done();\n              })\n              .catch(error => {\n                this.$message.error('删除失败');\n                console.error(error);\n              })\n              .finally(() => {\n                instance.confirmButtonLoading = false;\n              });\n          } else {\n            done();\n          }\n        }\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n\n    async confirmBatchDelete() {\n      if (this.selectedComments.length === 0) {\n        this.$message.warning('请选择要删除的评论');\n        return;\n      }\n\n      this.$confirm('确定要删除选中的评论吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      })\n        .then(async () => {\n          try {\n            await Promise.all(this.selectedComments.map(id => CommentAPI.deleteComment(id)));\n            this.fetchComments();\n            this.selectedComments = [];\n            this.$message.success('批量删除成功');\n          } catch (error) {\n            console.error('批量删除失败', error);\n            this.$message.error('批量删除失败');\n          }\n        })\n        .catch(() => { });\n    },\n\n    // 更新评论状态\n    async updateStatus(comment) {\n      try {\n        await CommentAPI.updateComment(comment);\n        this.$message.success('状态更新成功');\n      } catch (error) {\n        this.$message.error('更新状态失败');\n        console.error(error);\n      }\n    },\n\n    // 格式化时间\n    formatDate(date) {\n      return date ? new Date(date).toLocaleString() : \"无\";\n    },\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin-right: 5px;\n}\n\n.search-form {\n  margin-bottom: 0px;\n}\n\n.record-count {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #606266;\n}\n\n.action-row {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}