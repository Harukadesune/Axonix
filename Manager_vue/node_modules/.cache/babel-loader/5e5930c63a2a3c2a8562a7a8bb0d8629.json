{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Uservip/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Uservip/index.vue","mtime":1745308249743},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["VipAPI","data","vips","selectedVips","searchForm","userId","dialogVisible","vip","id","levels","startTime","endTime","totalPayment","totalRecords","rules","required","message","trigger","created","fetchVips","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","example","response","countResponse","wrap","_callee$","_context","prev","next","oredCriteria","criteria","push","condition","value","singleValue","getVips","sent","countVips","t0","console","error","stop","resetSearch","handleSelectionChange","selection","map","handleAdd","handleEdit","_objectSpread","submitForm","_this2","_callee3","_callee3$","_context3","$refs","vipForm","validate","_ref","_callee2","valid","_callee2$","_context2","updateVip","addVip","$message","success","_x","apply","arguments","closeDialog","confirmBatchDelete","_this3","length","$confirm","type","cancelButtonText","confirmButtonText","then","handleBatchDelete","catch","_this4","_callee4","_callee4$","_context4","Promise","all","deleteVip","handleDelete","_this5","_callee6","_callee6$","_context6","_callee5","_callee5$","_context5"],"sources":["src/views/Uservip/index.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <!-- VIP 查询表单 -->\n        <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n            <el-form-item label=\"用户ID\">\n                <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"fetchVips\">查询</el-button>\n                <el-button @click=\"resetSearch\">重置</el-button>\n            </el-form-item>\n        </el-form>\n\n        <!-- 操作按钮和记录数显示 -->\n        <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n            <el-col :span=\"8\">\n                <el-button type=\"primary\" @click=\"handleAdd\">添加VIP</el-button>\n                <el-button type=\"danger\" @click=\"confirmBatchDelete\"\n                    :disabled=\"selectedVips.length === 0\">批量删除</el-button>\n            </el-col>\n            <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n                <span>当前共有 {{ totalRecords }} 条记录</span>\n            </el-col>\n        </el-row>\n\n        <!-- VIP表格 -->\n        <el-table :data=\"vips\" border @selection-change=\"handleSelectionChange\":empty-text=\"'没有数据'\">\n            <el-table-column type=\"selection\" width=\"55\" />\n            <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\n            <el-table-column prop=\"userId\" label=\"用户ID\" width=\"100\" />\n            <el-table-column prop=\"levels\" label=\"VIP等级\" width=\"100\" />\n            <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"350\" />\n            <el-table-column prop=\"endTime\" label=\"结束时间\" width=\"350\" />\n            <el-table-column prop=\"totalPayment\" label=\"总支付金额\" width=\"100\" />\n\n            <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n                <template slot-scope=\"scope\">\n                    <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n                    <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!-- 添加/编辑VIP弹出框 -->\n        <el-dialog :visible.sync=\"dialogVisible\" title=\"VIP信息\" width=\"600px\">\n            <el-form ref=\"vipForm\" :model=\"vip\" :rules=\"rules\" label-width=\"100px\">\n                <el-form-item label=\"用户ID\" prop=\"userId\">\n                    <el-input v-model=\"vip.userId\" />\n                </el-form-item>\n\n                <el-form-item label=\"VIP等级\" prop=\"levels\">\n                    <el-input-number v-model=\"vip.levels\" :min=\"0\" :max=\"10\" />\n                </el-form-item>\n\n                <el-form-item label=\"开始时间\" prop=\"startTime\">\n                    <el-date-picker v-model=\"vip.startTime\" type=\"datetime\" />\n                </el-form-item>\n\n                <el-form-item label=\"结束时间\" prop=\"endTime\">\n                    <el-date-picker v-model=\"vip.endTime\" type=\"datetime\" />\n                </el-form-item>\n\n                <el-form-item label=\"总支付金额\" prop=\"totalPayment\">\n                    <el-input-number v-model=\"vip.totalPayment\" :min=\"0\" :max=\"1000000\" />\n                </el-form-item>\n\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n                    <el-button @click=\"closeDialog\">取消</el-button>\n                </el-form-item>\n            </el-form>\n        </el-dialog>\n    </div>\n</template>\n\n\n<script>\nimport VipAPI from '@/api/uservip_api.js';\n\nexport default {\n    data() {\n        return {\n            vips: [],\n            selectedVips: [],\n            searchForm: {\n                userId: ''\n            },\n            dialogVisible: false,\n            vip: {\n                id: null,\n                userId: 0,\n                levels: 0,\n                startTime: '',\n                endTime: '',\n                totalPayment: 0,\n            },\n            totalRecords: 0,\n            rules: {\n                userId: [{ required: true, message: '请输入用户ID', trigger: 'blur' }],\n                levels: [{ required: true, message: '请输入VIP等级', trigger: 'blur' }],\n                startTime: [{ required: true, message: '请选择开始时间', trigger: 'change' }],\n                endTime: [{ required: true, message: '请选择结束时间', trigger: 'change' }],\n                totalPayment: [{ required: true, message: '请输入总支付金额', trigger: 'blur' }]\n            }\n        };\n    },\n    created() {\n        this.fetchVips();\n    },\n    methods: {\n        async fetchVips() {\n            const example = {\n                oredCriteria: [{ criteria: [] }]\n            };\n\n            if (this.searchForm.userId) {\n                example.oredCriteria[0].criteria.push({\n                    condition: 'user_id =',\n                    value: this.searchForm.userId,\n                    singleValue: true\n                });\n            }\n\n            try {\n                const response = await VipAPI.getVips(example);\n                this.vips = response.data;\n\n                const countResponse = await VipAPI.countVips(example);\n                this.totalRecords = countResponse.data;\n            } catch (error) {\n                console.error('获取VIP列表失败', error);\n            }\n        },\n\n        resetSearch() {\n            this.searchForm = { userId: '' };\n            this.totalRecords = 0;\n            this.fetchVips();\n        },\n\n        handleSelectionChange(selection) {\n            this.selectedVips = selection.map(vip => vip.id);\n        },\n\n        handleAdd() {\n            this.vip = {\n                id: null,\n                userId: 0,\n                levels: 0,\n                startTime: '',\n                endTime: '',\n                totalPayment: 0\n            };\n            this.dialogVisible = true;\n        },\n\n        handleEdit(vip) {\n            this.vip = { ...vip };\n            this.dialogVisible = true;\n        },\n\n        async submitForm() {\n            this.$refs.vipForm.validate(async (valid) => {\n                if (valid) {\n                    try {\n                        if (this.vip.id) {\n                            await VipAPI.updateVip(this.vip);\n                        } else {\n                            await VipAPI.addVip(this.vip);\n                        }\n                        this.$message.success('VIP信息保存成功');\n                        this.dialogVisible = false;\n                        this.fetchVips();\n                    } catch (error) {\n                        this.$message.error('保存VIP信息失败');\n                        console.error(error);\n                    }\n                }\n            });\n        },\n\n        closeDialog() {\n            this.dialogVisible = false;\n        },\n\n        confirmBatchDelete() {\n            if (this.selectedVips.length === 0) return;\n            this.$confirm('确定要删除选中的VIP信息吗？', '警告', {\n                type: 'warning',\n                cancelButtonText: '取消',\n                confirmButtonText: '确定'\n            })\n                .then(() => this.handleBatchDelete())\n                .catch(() => { });\n        },\n\n        async handleBatchDelete() {\n            try {\n                await Promise.all(this.selectedVips.map(id => VipAPI.deleteVip(id)));\n                this.fetchVips();\n                this.selectedVips = [];\n                this.$message.success('批量删除成功');\n            } catch (error) {\n                console.error('批量删除失败', error);\n            }\n        },\n\n        async handleDelete(id) {\n            this.$confirm('确定要删除该用户吗？', '警告', { \n                type: 'warning',\n                cancelButtonText: '取消',\n                confirmButtonText: '确定'\n             })\n                .then(async () => {\n                    try {\n                        await VipAPI.deleteVip(id);\n                        this.$message.success('删除成功');\n                        this.fetchVips();\n                    } catch (error) {\n                        console.error('删除失败', error);\n                        this.$message.error('删除VIP失败');\n                    }\n                })\n                .catch(() => {\n                    // 如果用户取消操作，什么都不做\n                });\n        }\n    }\n};\n</script>\n\n<style scoped>\n.app-container {\n    padding: 20px;\n}\n\n.el-table {\n    margin-top: 20px;\n}\n\n.el-button {\n    margin-right: 5px;\n}\n\n.search-form {\n    margin-bottom: 0px;\n}\n\n.record-count {\n    margin-top: 20px;\n    font-size: 14px;\n    color: #606266;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}