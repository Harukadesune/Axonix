{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/AIlogs/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/AIlogs/index.vue","mtime":1745308249741},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2hhcnVrYS9JZGVhUHJvamVjdHMvQXhvbml4L0ZvaWVzX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9oYXJ1a2EvSWRlYVByb2plY3RzL0F4b25peC9Gb2llc192dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0IEFpTG9nQVBJIGZyb20gJ0AvYXBpL2FpX2xvZ19hcGknOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFpTG9nczogW10sCiAgICAgIC8vIEFJ5pel5b+X5pWw5o2uCiAgICAgIHRvdGFsUmVjb3JkczogMCwKICAgICAgLy8g5oC76K6w5b2V5pWwCiAgICAgIHNlYXJjaEZvcm06IHsKICAgICAgICAvLyDmkJzntKLooajljZUKICAgICAgICB1c2VySWQ6ICcnCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaEFpTG9ncygpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+WQUnml6Xlv5fmlbDmja4KICAgIGZldGNoQWlMb2dzOiBmdW5jdGlvbiBmZXRjaEFpTG9ncygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBleGFtcGxlLCByZXNwb25zZSwgY291bnRSZXNwb25zZTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBleGFtcGxlID0gewogICAgICAgICAgICAgICAgb3JlZENyaXRlcmlhOiBbewogICAgICAgICAgICAgICAgICBjcml0ZXJpYTogW10KICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBpZiAoX3RoaXMuc2VhcmNoRm9ybS51c2VySWQpIHsKICAgICAgICAgICAgICAgIGV4YW1wbGUub3JlZENyaXRlcmlhWzBdLmNyaXRlcmlhLnB1c2goewogICAgICAgICAgICAgICAgICBjb25kaXRpb246ICJ1c2VyX2lkID0iLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3RoaXMuc2VhcmNoRm9ybS51c2VySWQsCiAgICAgICAgICAgICAgICAgIHNpbmdsZVZhbHVlOiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIEFpTG9nQVBJLmdldEFpTG9ncyhleGFtcGxlKTsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5haUxvZ3MgPSByZXNwb25zZS5kYXRhOwoKICAgICAgICAgICAgICAvLyDojrflj5borrDlvZXmgLvmlbDlubbmm7TmlrAKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICByZXR1cm4gQWlMb2dBUEkuY291bnRBaUxvZ3MoZXhhbXBsZSk7CiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjb3VudFJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy50b3RhbFJlY29yZHMgPSBjb3VudFJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPlkFJ5pel5b+X5YiX6KGo5aSx6LSlJywgX2NvbnRleHQudDApOwogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxM11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g6YeN572u5pCc57Si6KGo5Y2VCiAgICByZXNldFNlYXJjaDogZnVuY3Rpb24gcmVzZXRTZWFyY2goKSB7CiAgICAgIHRoaXMuc2VhcmNoRm9ybSA9IHsKICAgICAgICB1c2VySWQ6ICcnCiAgICAgIH07CiAgICAgIHRoaXMuZmV0Y2hBaUxvZ3MoKTsKICAgIH0sCiAgICAvLyDmoLzlvI/ljJbml6XmnJ8KICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICByZXR1cm4gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlU3RyaW5nKCkgOiAi5pegIjsKICAgIH0KICB9Cn07"},{"version":3,"names":["AiLogAPI","data","aiLogs","totalRecords","searchForm","userId","created","fetchAiLogs","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","example","response","countResponse","wrap","_callee$","_context","prev","next","oredCriteria","criteria","push","condition","value","singleValue","getAiLogs","sent","countAiLogs","t0","console","error","stop","resetSearch","formatDate","date","Date","toLocaleString"],"sources":["src/views/AIlogs/index.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n      <!-- 搜索表单 -->\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n        <el-form-item label=\"用户ID\">\n          <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchAiLogs\">查询</el-button>\n          <el-button @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n  \n      <!-- 记录数显示 -->\n      <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"8\" class=\"record-count\" style=\"text-align: left;\">\n          <span>当前共有 {{ totalRecords }} 条记录</span>\n        </el-col>\n      </el-row>\n  \n      <!-- AI日志表格 -->\n      <el-table :data=\"aiLogs\" border>\n        <el-table-column prop=\"id\" label=\"日志ID\" />\n        <el-table-column prop=\"userId\" label=\"用户ID\" />\n        <el-table-column prop=\"startTime\" label=\"开始时间\">\n          <template slot-scope=\"scope\">{{ formatDate(scope.row.startTime) }}</template>\n        </el-table-column>\n      </el-table>\n    </div>\n  </template>\n  \n  <script>\n  import AiLogAPI from '@/api/ai_log_api';\n  \n  export default {\n    data() {\n      return {\n        aiLogs: [],        // AI日志数据\n        totalRecords: 0,   // 总记录数\n        searchForm: {      // 搜索表单\n          userId: ''\n        }\n      };\n    },\n  \n    created() {\n      this.fetchAiLogs();\n    },\n  \n    methods: {\n      // 获取AI日志数据\n      async fetchAiLogs() {\n        const example = {\n          oredCriteria: [{ criteria: [] }]\n        };\n  \n        if (this.searchForm.userId) {\n          example.oredCriteria[0].criteria.push({\n            condition: \"user_id =\",\n            value: this.searchForm.userId,\n            singleValue: true\n          });\n        }\n  \n        try {\n          const response = await AiLogAPI.getAiLogs(example);\n          this.aiLogs = response.data;\n  \n          // 获取记录总数并更新\n          const countResponse = await AiLogAPI.countAiLogs(example);\n          this.totalRecords = countResponse.data;\n        } catch (error) {\n          console.error('获取AI日志列表失败', error);\n        }\n      },\n  \n      // 重置搜索表单\n      resetSearch() {\n        this.searchForm = { userId: '' };\n        this.fetchAiLogs();\n      },\n  \n      // 格式化日期\n      formatDate(date) {\n        return date ? new Date(date).toLocaleString() : \"无\";\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .app-container {\n    padding: 20px;\n  }\n  \n  .el-table {\n    margin-top: 10px;\n  }\n  \n  .el-button {\n    margin-right: 5px;\n  }\n  \n  .search-form {\n    margin-bottom: 0px;\n  }\n  \n  .record-count {\n    font-size: 14px;\n    color: #606266;\n  }\n  \n  .action-row {\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":";;;AAgCA,OAAAA,QAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MAAA;MACAC,YAAA;MAAA;MACAC,UAAA;QAAA;QACAC,MAAA;MACA;IACA;EACA;EAEAC,OAAA,WAAAA,QAAA;IACA,KAAAC,WAAA;EACA;EAEAC,OAAA;IACA;IACAD,WAAA,WAAAA,YAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA,EAAAC,QAAA,EAAAC,aAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAP,OAAA;gBACAQ,YAAA;kBAAAC,QAAA;gBAAA;cACA;cAEA,IAAAd,KAAA,CAAAL,UAAA,CAAAC,MAAA;gBACAS,OAAA,CAAAQ,YAAA,IAAAC,QAAA,CAAAC,IAAA;kBACAC,SAAA;kBACAC,KAAA,EAAAjB,KAAA,CAAAL,UAAA,CAAAC,MAAA;kBACAsB,WAAA;gBACA;cACA;cAAAR,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGArB,QAAA,CAAA4B,SAAA,CAAAd,OAAA;YAAA;cAAAC,QAAA,GAAAI,QAAA,CAAAU,IAAA;cACApB,KAAA,CAAAP,MAAA,GAAAa,QAAA,CAAAd,IAAA;;cAEA;cAAAkB,QAAA,CAAAE,IAAA;cAAA,OACArB,QAAA,CAAA8B,WAAA,CAAAhB,OAAA;YAAA;cAAAE,aAAA,GAAAG,QAAA,CAAAU,IAAA;cACApB,KAAA,CAAAN,YAAA,GAAAa,aAAA,CAAAf,IAAA;cAAAkB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;cAEAa,OAAA,CAAAC,KAAA,eAAAd,QAAA,CAAAY,EAAA;YAAA;YAAA;cAAA,OAAAZ,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAArB,OAAA;MAAA;IAEA;IAEA;IACAsB,WAAA,WAAAA,YAAA;MACA,KAAA/B,UAAA;QAAAC,MAAA;MAAA;MACA,KAAAE,WAAA;IACA;IAEA;IACA6B,UAAA,WAAAA,WAAAC,IAAA;MACA,OAAAA,IAAA,OAAAC,IAAA,CAAAD,IAAA,EAAAE,cAAA;IACA;EACA;AACA","ignoreList":[]}]}