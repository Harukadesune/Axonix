{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Admininfo/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Admininfo/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["AdminAPI","data","admins","totalRecords","selectedAdmins","searchForm","username","phone","dialogVisible","admin","id","password","createdAt","updatedAt","rules","required","message","trigger","created","fetchAdmins","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","example","response","countResponse","wrap","_callee$","_context","prev","next","oredCriteria","criteria","push","condition","value","concat","singleValue","getAdmins","sent","countAdmins","t0","console","error","stop","resetSearch","handleSelectionChange","selection","map","handleAdd","handleEdit","_objectSpread","submitForm","_this2","_callee3","_callee3$","_context3","$refs","adminForm","validate","_ref","_callee2","valid","_callee2$","_context2","updateAdmin","addAdmin","$message","success","_x","apply","arguments","handleDelete","_this3","_callee5","_callee5$","_context5","$confirm","type","cancelButtonText","confirmButtonText","then","_callee4","_callee4$","_context4","deleteAdmin","catch","info","closeDialog","confirmBatchDelete","_this4","length","handleBatchDelete","_this5","_callee6","_callee6$","_context6","Promise","all","formatDate","date","Date","toLocaleString"],"sources":["src/views/Admininfo/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索表单 -->\n    <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n      <el-form-item label=\"用户名\">\n        <el-input v-model=\"searchForm.username\" placeholder=\"请输入用户名\" clearable />\n      </el-form-item>\n      <el-form-item label=\"电话\">\n        <el-input v-model=\"searchForm.phone\" placeholder=\"请输入电话\" clearable />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"fetchAdmins\">查询</el-button>\n        <el-button @click=\"resetSearch\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮和记录数显示 -->\n    <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n      <el-col :span=\"8\">\n        <el-button type=\"primary\" @click=\"handleAdd\">添加用户</el-button>\n        <el-button type=\"danger\" @click=\"confirmBatchDelete\" :disabled=\"selectedAdmins.length === 0\">批量删除</el-button>\n      </el-col>\n      <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n        <span>当前共有 {{ totalRecords }} 条记录</span>\n      </el-col>\n    </el-row>\n\n    <!-- 管理员表格 -->\n    <el-table :data=\"admins\" border @selection-change=\"handleSelectionChange\" :empty-text=\"'没有数据'\">\n      <el-table-column type=\"selection\" width=\"50\" />\n      <el-table-column prop=\"id\" label=\"ID\" />\n      <el-table-column prop=\"username\" label=\"用户名\" />\n      <el-table-column prop=\"phone\" label=\"电话\" />\n      <el-table-column prop=\"createdAt\" label=\"创建时间\">\n        <template slot-scope=\"scope\">{{ formatDate(scope.row.createdAt) }}</template>\n      </el-table-column>\n      <el-table-column prop=\"updatedAt\" label=\"更新时间\">\n        <template slot-scope=\"scope\">{{ formatDate(scope.row.updatedAt) }}</template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 添加/编辑管理员弹出框 -->\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"管理员信息\" width=\"600px\">\n      <el-form ref=\"adminForm\" :model=\"admin\" :rules=\"rules\" label-width=\"100px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"admin.username\" />\n        </el-form-item>\n\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"admin.password\" type=\"password\" />\n        </el-form-item>\n\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"admin.phone\" />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n          <el-button @click=\"closeDialog\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport AdminAPI from '@/api/admin_api';\n\nexport default {\n  data() {\n    return {\n      admins: [],\n      totalRecords: 0,  // 添加记录数\n      selectedAdmins: [],\n      searchForm: {\n        username: '',\n        phone: ''\n      },\n      dialogVisible: false,  // 控制弹出框显示\n      admin: {\n        id: null,\n        username: '',\n        password: '',\n        phone: '',\n        createdAt: '',\n        updatedAt: '',\n      },\n      rules: {\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        phone: [{ required: true, message: '请输入电话', trigger: 'blur' }]\n      }\n    };\n  },\n  created() {\n    this.fetchAdmins();\n  },\n  methods: {\n    async fetchAdmins() {\n      const example = {\n        oredCriteria: [{ criteria: [] }]\n      };\n\n      if (this.searchForm.username) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"username LIKE\",\n          value: `%${this.searchForm.username}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.phone) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"phone LIKE\",\n          value: `%${this.searchForm.phone}%`,\n          singleValue: true\n        });\n      }\n\n      try {\n        const response = await AdminAPI.getAdmins(example);\n        this.admins = response.data;\n\n        const countResponse = await AdminAPI.countAdmins(example);\n        this.totalRecords = countResponse.data; // 假设返回的是记录总数\n      } catch (error) {\n        console.error('获取管理员列表失败', error);\n      }\n    },\n\n    resetSearch() {\n      this.searchForm = { username: '', phone: '' };\n      this.fetchAdmins();\n    },\n\n    handleSelectionChange(selection) {\n      this.selectedAdmins = selection.map(admin => admin.id);\n    },\n\n    handleAdd() {\n      this.admin = {\n        id: null,\n        username: '',\n        password: '',\n        phone: '',\n        createdAt: '',\n        updatedAt: ''\n      };\n      this.dialogVisible = true;\n    },\n\n    handleEdit(admin) {\n      this.admin = { ...admin };\n      this.dialogVisible = true;\n    },\n\n    async submitForm() {\n      this.$refs.adminForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            if (this.admin.id) {\n              await AdminAPI.updateAdmin(this.admin);\n            } else {\n              await AdminAPI.addAdmin(this.admin);\n            }\n            this.$message.success('管理员信息保存成功');\n            this.dialogVisible = false;\n            this.fetchAdmins();\n          } catch (error) {\n            this.$message.error('保存管理员信息失败');\n            console.error(error);\n          }\n        }\n      });\n    },\n    // 在methods中添加这个方法\n    async handleDelete(id) {\n      this.$confirm('确定要删除此管理员吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      })\n        .then(async () => {\n          try {\n            await AdminAPI.deleteAdmin(id);\n            this.$message.success('删除成功');\n            this.fetchAdmins(); // 刷新列表\n          } catch (error) {\n            this.$message.error('删除失败');\n            console.error('删除管理员失败', error);\n          }\n        })\n        .catch(() => {\n          this.$message.info('已取消删除');\n        });\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n    },\n\n    confirmBatchDelete() {\n      if (this.selectedAdmins.length === 0) return;\n      this.$confirm('确定要删除选中的管理员吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      })\n        .then(() => this.handleBatchDelete())\n        .catch(() => { });\n    },\n\n    async handleBatchDelete() {\n      try {\n        await Promise.all(this.selectedAdmins.map(id => AdminAPI.deleteAdmin(id)));\n        this.fetchAdmins();\n        this.selectedAdmins = [];\n        this.$message.success('批量删除成功');\n      } catch (error) {\n        console.error('批量删除失败', error);\n      }\n    },\n\n    formatDate(date) {\n      return date ? new Date(date).toLocaleString() : \"无\";\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin-right: 5px;\n}\n\n.search-form {\n  margin-bottom: 0px;\n}\n\n.add-admin-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.record-count {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #606266;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}