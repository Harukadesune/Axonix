{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Postinfo/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Postinfo/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["PostinfoAPI","data","posts","selectedPosts","totalRecords","searchForm","title","userId","dialogVisible","currentPost","id","likes","dislikes","createdAt","updatedAt","content","created","fetchForumPosts","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","example","response","countResponse","wrap","_callee$","_context","prev","next","oredCriteria","criteria","push","condition","value","concat","singleValue","getForumPostsWithBlobs","sent","countForumPosts","t0","console","error","stop","resetSearch","handleSelectionChange","selection","map","post","formatDate","date","d","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","updatePostStatus","_this2","_callee2","_callee2$","_context2","updateForumPost","$message","success","handleDelete","postId","_this3","_callee4","_callee4$","_context4","$confirm","type","cancelButtonText","confirmButtonText","then","_callee3","_callee3$","_context3","deleteForumPost","catch","confirmBatchDelete","_this4","_callee6","_callee6$","_context6","length","warning","abrupt","_callee5","_callee5$","_context5","Promise","all","handleView","_this5","_callee7","_callee7$","_context7","getForumPostDetail","closeDialog"],"sources":["src/views/Postinfo/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索表单 -->\n    <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n      <el-form-item label=\"帖子标题\">\n        <el-input v-model=\"searchForm.title\" placeholder=\"请输入帖子标题\" clearable />\n      </el-form-item>\n      <el-form-item label=\"用户ID\">\n        <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"fetchForumPosts\">查询</el-button>\n        <el-button @click=\"resetSearch\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮和记录数显示 -->\n    <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n      <el-col :span=\"8\">\n        <el-button type=\"danger\" @click=\"confirmBatchDelete\" :disabled=\"selectedPosts.length === 0\">批量删除</el-button>\n      </el-col>\n      <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n        <span>当前共有 {{ totalRecords }} 条记录</span>\n      </el-col>\n    </el-row>\n\n    <!-- 帖子表格 -->\n    <el-table :data=\"posts\" border @selection-change=\"handleSelectionChange\":empty-text=\"'没有数据'\">\n      <el-table-column type=\"selection\" width=\"55\" />\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n      <el-table-column prop=\"title\" label=\"标题\" width=\"200\" />\n      <el-table-column prop=\"userId\" label=\"用户ID\" width=\"100\" />\n      <el-table-column prop=\"likes\" label=\"点赞数\" width=\"100\" />\n      <el-table-column prop=\"dislikes\" label=\"点踩数\" width=\"100\" />\n      <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.createdAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"updatedAt\" label=\"更新时间\" width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.updatedAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"审核状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-select v-model=\"scope.row.status\" @change=\"updatePostStatus(scope.row)\" size=\"small\">\n            <el-option label=\"审核中\" :value=\"0\" />\n            <el-option label=\"驳回\" :value=\"1\" />\n            <el-option label=\"异常\" :value=\"2\" />\n            <el-option label=\"已发布\" :value=\"3\" />\n            <el-option label=\"私密\" :value=\"4\" />\n          </el-select>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleView(scope.row)\">查看</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 查看帖子弹出框 -->\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"帖子详情\" width=\"800px\">\n      <div>\n        <el-form :model=\"currentPost\" label-width=\"100px\">\n          <el-form-item label=\"帖子标题\">\n            <el-input v-model=\"currentPost.title\" readonly />\n          </el-form-item>\n          <el-form-item label=\"用户ID\">\n            <el-input v-model=\"currentPost.userId\" readonly />\n          </el-form-item>\n          <el-form-item label=\"点赞数\">\n            <el-input v-model=\"currentPost.likes\" readonly />\n          </el-form-item>\n          <el-form-item label=\"点踩数\">\n            <el-input v-model=\"currentPost.dislikes\" readonly />\n          </el-form-item>\n          <el-form-item label=\"内容\">\n            <el-input type=\"textarea\" v-model=\"currentPost.content\" rows=\"6\" readonly />\n          </el-form-item>\n        </el-form>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">关闭</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport PostinfoAPI from '@/api/postinfo_api';\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      selectedPosts: [],\n      totalRecords: 0,\n      searchForm: {\n        title: '',\n        userId: ''\n      },\n      dialogVisible: false,\n      currentPost: {\n        id: null,\n        title: '',\n        userId: '',\n        likes: 0,\n        dislikes: 0,\n        createdAt: '',\n        updatedAt: '',\n        content: ''\n      }\n    };\n  },\n\n  created() {\n    this.fetchForumPosts();\n  },\n\n  methods: {\n    async fetchForumPosts() {\n      const example = {\n        oredCriteria: [{ criteria: [] }]\n      };\n\n      if (this.searchForm.title) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"title LIKE\",\n          value: `%${this.searchForm.title}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.userId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"user_id =\",\n          value: this.searchForm.userId,\n          singleValue: true\n        });\n      }\n\n      try {\n        const response = await PostinfoAPI.getForumPostsWithBlobs(example);\n        this.posts = response.data;\n\n        const countResponse = await PostinfoAPI.countForumPosts(example);\n        this.totalRecords = countResponse.data;\n      } catch (error) {\n        console.error('获取帖子列表失败', error);\n      }\n    },\n\n    resetSearch() {\n      this.searchForm = { title: '', userId: '' };\n      this.fetchForumPosts();\n    },\n\n    handleSelectionChange(selection) {\n      this.selectedPosts = selection.map(post => post.id);\n    },\n\n    formatDate(date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n    },\n\n    async updatePostStatus(post) {\n      try {\n        await PostinfoAPI.updateForumPost(post);\n        this.$message.success('帖子状态更新成功');\n        post.updatedAt = new Date();\n      } catch (error) {\n        console.error('更新帖子状态失败', error);\n        this.$message.error('更新帖子状态失败');\n      }\n    },\n\n    async handleDelete(postId) {\n      this.$confirm('确定要删除该帖子吗？', '警告', { \n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定' })\n        .then(async () => {\n          try {\n            await PostinfoAPI.deleteForumPost(postId);\n            this.$message.success('删除成功');\n            this.fetchForumPosts();\n          } catch (error) {\n            console.error('删除失败', error);\n            this.$message.error('删除失败');\n          }\n        })\n        .catch(() => { });\n    },\n\n    async confirmBatchDelete() {\n      if (this.selectedPosts.length === 0) {\n        this.$message.warning('请选择要删除的帖子');\n        return;\n      }\n\n      this.$confirm('确定要删除选中的帖子吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',  // 设置取消按钮文本\n        confirmButtonText: '确定'   // 设置确定按钮文本\n      })\n        .then(async () => {\n          try {\n            await Promise.all(this.selectedPosts.map(id => PostinfoAPI.deleteForumPost(id)));\n            this.fetchForumPosts();\n            this.selectedPosts = [];\n            this.$message.success('批量删除成功');\n          } catch (error) {\n            console.error('批量删除失败', error);\n            this.$message.error('批量删除失败');\n          }\n        })\n        .catch(() => { });\n    },\n\n    async handleView(post) {\n      try {\n        const response = await PostinfoAPI.getForumPostDetail(post.id);\n        this.currentPost = response.data;\n        this.dialogVisible = true;\n      } catch (error) {\n        console.error('获取帖子详情失败', error);\n        this.$message.error('获取帖子详情失败');\n      }\n    },\n\n    closeDialog() {\n      this.dialogVisible = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin-right: 5px;\n}\n\n.search-form {\n  margin-bottom: 0px;\n}\n\n.record-count {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #606266;\n}\n\n.action-row {\n  margin-bottom: 20px;\n}\n\n.dialog-footer {\n  text-align: right;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}