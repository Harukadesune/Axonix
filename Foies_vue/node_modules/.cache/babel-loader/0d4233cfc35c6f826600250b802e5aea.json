{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Feedback/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Feedback/index.vue","mtime":1745308249742},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/babel.config.js","mtime":1745308249734},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2hhcnVrYS9JZGVhUHJvamVjdHMvQXhvbml4L0ZvaWVzX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9oYXJ1a2EvSWRlYVByb2plY3RzL0F4b25peC9Gb2llc192dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0IEZlZWRiYWNrQVBJIGZyb20gJ0AvYXBpL2ZlZWRiYWNrX2FwaSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmVlZGJhY2tzOiBbXSwKICAgICAgLy8g5Y+N6aaI5pWw5o2uCiAgICAgIHRvdGFsUmVjb3JkczogMCwKICAgICAgLy8g5oC76K6w5b2V5pWwCiAgICAgIHNlYXJjaEZvcm06IHsKICAgICAgICB1c2VySWQ6ICcnCiAgICAgIH0sCiAgICAgIC8vIOaQnOe0ouihqOWNlQogICAgICBzdGF0dXNPcHRpb25zOiBbCiAgICAgIC8vIOeKtuaAgemAiemhuQogICAgICB7CiAgICAgICAgdmFsdWU6IDAsCiAgICAgICAgbGFiZWw6ICflvoXlpITnkIYnCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogMSwKICAgICAgICBsYWJlbDogJ+WkhOeQhuS4rScKICAgICAgfSwgewogICAgICAgIHZhbHVlOiAyLAogICAgICAgIGxhYmVsOiAn5bey6Kej5YazJwogICAgICB9XQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRmVlZGJhY2tzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5blj43ppojmlbDmja4KICAgIGZldGNoRmVlZGJhY2tzOiBmdW5jdGlvbiBmZXRjaEZlZWRiYWNrcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBleGFtcGxlLCByZXNwb25zZSwgY291bnRSZXNwb25zZTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBleGFtcGxlID0gewogICAgICAgICAgICAgICAgb3JlZENyaXRlcmlhOiBbewogICAgICAgICAgICAgICAgICBjcml0ZXJpYTogW10KICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBpZiAoX3RoaXMuc2VhcmNoRm9ybS51c2VySWQpIHsKICAgICAgICAgICAgICAgIGV4YW1wbGUub3JlZENyaXRlcmlhWzBdLmNyaXRlcmlhLnB1c2goewogICAgICAgICAgICAgICAgICBjb25kaXRpb246ICJ1c2VyX2lkID0iLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3RoaXMuc2VhcmNoRm9ybS51c2VySWQsCiAgICAgICAgICAgICAgICAgIHNpbmdsZVZhbHVlOiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIEZlZWRiYWNrQVBJLmdldEZlZWRiYWNrc0J5RXhhbXBsZVdpdGhCbG9icyhleGFtcGxlKTsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5mZWVkYmFja3MgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIHJldHVybiBGZWVkYmFja0FQSS5jb3VudEZlZWRiYWNrcyhleGFtcGxlKTsKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNvdW50UmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF90aGlzLnRvdGFsUmVjb3JkcyA9IGNvdW50UmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEzOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5Y+N6aaI5YiX6KGo5aSx6LSlJywgX2NvbnRleHQudDApOwogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxM11dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g6YeN572u5pCc57SiCiAgICByZXNldFNlYXJjaDogZnVuY3Rpb24gcmVzZXRTZWFyY2goKSB7CiAgICAgIHRoaXMuc2VhcmNoRm9ybSA9IHsKICAgICAgICB1c2VySWQ6ICcnCiAgICAgIH07CiAgICAgIHRoaXMuZmV0Y2hGZWVkYmFja3MoKTsKICAgIH0sCiAgICAvLyDkv67mlLnnirbmgIEKICAgIHVwZGF0ZVN0YXR1czogZnVuY3Rpb24gdXBkYXRlU3RhdHVzKHJvdykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZmVlZGJhY2s7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAvLyDlh4blpIfopoHmm7TmlrDnmoTlj43ppojorrDlvZUKICAgICAgICAgICAgICBmZWVkYmFjayA9IHsKICAgICAgICAgICAgICAgIGlkOiByb3cuaWQsCiAgICAgICAgICAgICAgICBzdGF0dXM6IHJvdy5zdGF0dXMKICAgICAgICAgICAgICB9OyAvLyDosIPnlKggQVBJIOi/m+ihjOeKtuaAgeabtOaWsAogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gRmVlZGJhY2tBUEkudXBkYXRlRmVlZGJhY2tTZWxlY3RpdmUoZmVlZGJhY2spOwogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgLy8g5pu05paw5oiQ5Yqf5ZCO55qE5Y+N6aaI5L+h5oGvCiAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLnN1Y2Nlc3MoJ+eKtuaAgeabtOaWsOaIkOWKnycpOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIC8vIOWmguaenOWPkeeUn+mUmeivr++8jOaYvuekuumUmeivr+S/oeaBrwogICAgICAgICAgICAgIF90aGlzMi4kbWVzc2FnZS5lcnJvcign54q25oCB5pu05paw5aSx6LSlJyk7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcign54q25oCB5pu05paw6ZSZ6K+vJywgX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDmoLzlvI/ljJbml6XmnJ8KICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICByZXR1cm4gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlU3RyaW5nKCkgOiAi5pegIjsKICAgIH0KICB9Cn07"},{"version":3,"names":["FeedbackAPI","data","feedbacks","totalRecords","searchForm","userId","statusOptions","value","label","created","fetchFeedbacks","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","example","response","countResponse","wrap","_callee$","_context","prev","next","oredCriteria","criteria","push","condition","singleValue","getFeedbacksByExampleWithBlobs","sent","countFeedbacks","t0","console","error","stop","resetSearch","updateStatus","row","_this2","_callee2","feedback","_callee2$","_context2","id","status","updateFeedbackSelective","$message","success","formatDate","date","Date","toLocaleString"],"sources":["src/views/Feedback/index.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n      <!-- 搜索表单 -->\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n        <el-form-item label=\"用户ID\">\n          <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchFeedbacks\">查询</el-button>\n          <el-button @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n  \n      <!-- 记录数显示 -->\n      <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"8\" class=\"record-count\">\n          <span>当前共有 {{ totalRecords }} 条记录</span>\n        </el-col>\n      </el-row>\n  \n      <!-- 反馈表格 -->\n      <el-table :data=\"feedbacks\" border>\n        <el-table-column prop=\"id\" label=\"反馈ID\" />\n        <el-table-column prop=\"userId\" label=\"用户ID\" />\n        <el-table-column prop=\"issue\" label=\"反馈内容\" />\n        <el-table-column prop=\"createdAt\" label=\"创建时间\">\n          <template v-slot=\"scope\">{{ formatDate(scope.row.createdAt) }}</template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template v-slot=\"scope\">\n            <el-select v-model=\"scope.row.status\" @change=\"updateStatus(scope.row)\">\n              <el-option v-for=\"item in statusOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n            </el-select>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n  </template>\n  \n  <script>\n  import FeedbackAPI from '@/api/feedback_api';\n  \n  export default {\n    data() {\n      return {\n        feedbacks: [],        // 反馈数据\n        totalRecords: 0,      // 总记录数\n        searchForm: { userId: '' }, // 搜索表单\n        statusOptions: [      // 状态选项\n          { value: 0, label: '待处理' },\n          { value: 1, label: '处理中' },\n          { value: 2, label: '已解决' }\n        ]\n      };\n    },\n  \n    created() {\n      this.fetchFeedbacks();\n    },\n  \n    methods: {\n      // 获取反馈数据\n      async fetchFeedbacks() {\n        const example = { oredCriteria: [{ criteria: [] }] };\n        if (this.searchForm.userId) {\n          example.oredCriteria[0].criteria.push({\n            condition: \"user_id =\",\n            value: this.searchForm.userId,\n            singleValue: true\n          });\n        }\n        try {\n          const response = await FeedbackAPI.getFeedbacksByExampleWithBlobs(example);\n          this.feedbacks = response.data;\n          const countResponse = await FeedbackAPI.countFeedbacks(example);\n          this.totalRecords = countResponse.data;\n        } catch (error) {\n          console.error('获取反馈列表失败', error);\n        }\n      },\n  \n      // 重置搜索\n      resetSearch() {\n        this.searchForm = { userId: '' };\n        this.fetchFeedbacks();\n      },\n  \n      // 修改状态\n      async updateStatus(row) {\n  try {\n    // 准备要更新的反馈记录\n    const feedback = { id: row.id, status: row.status };\n    \n    // 调用 API 进行状态更新\n    await FeedbackAPI.updateFeedbackSelective(feedback);\n    \n    // 更新成功后的反馈信息\n    this.$message.success('状态更新成功');\n  } catch (error) {\n    // 如果发生错误，显示错误信息\n    this.$message.error('状态更新失败');\n    console.error('状态更新错误', error);\n  }\n},\n  \n      // 格式化日期\n      formatDate(date) {\n        return date ? new Date(date).toLocaleString() : \"无\";\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .app-container {\n    padding: 20px;\n  }\n  \n  .el-table {\n    margin-top: 10px;\n  }\n  \n  .el-button {\n    margin-right: 5px;\n  }\n  \n  .search-form {\n    margin-bottom: 0px;\n  }\n  \n  .record-count {\n    font-size: 14px;\n    color: #606266;\n  }\n  \n  .action-row {\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]}]}