{"remainingRequest":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Usercontact/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/src/views/Usercontact/index.vue","mtime":1745308249743},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/babel-loader/lib/index.js","mtime":1745391003757},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/cache-loader/dist/cjs.js","mtime":1745391003736},{"path":"/Users/haruka/IdeaProjects/Axonix/Foies_vue/node_modules/vue-loader/lib/index.js","mtime":1745391002124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBVc2VyQ29udGFjdEFQSSBmcm9tICdAL2FwaS91c2VyY29udGFjdF9hcGknOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb250YWN0czogW10sCiAgICAgIHRvdGFsUmVjb3JkczogMCwKICAgICAgc2VsZWN0ZWRDb250YWN0czogW10sCiAgICAgIHNlYXJjaEZvcm06IHsKICAgICAgICB1c2VySWQ6ICcnLAogICAgICAgIGNvbnRhY3RVc2VySWQ6ICcnLAogICAgICAgIGNvbnRhY3RQaG9uZTogJycKICAgICAgfSwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGNvbnRhY3Q6IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICB1c2VySWQ6ICcnLAogICAgICAgIGNvbnRhY3RVc2VySWQ6ICcnLAogICAgICAgIGNvbnRhY3RQaG9uZTogJycsCiAgICAgICAgcmVsYXRpb25zaGlwOiAnJywKICAgICAgICBjcmVhdGVkQXQ6ICcnLAogICAgICAgIHVwZGF0ZWRBdDogJycKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoQ29udGFjdHMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGZldGNoQ29udGFjdHMoKSB7CiAgICAgIGNvbnN0IGV4YW1wbGUgPSB7CiAgICAgICAgb3JlZENyaXRlcmlhOiBbeyBjcml0ZXJpYTogW10gfV0KICAgICAgfTsKCiAgICAgIGlmICh0aGlzLnNlYXJjaEZvcm0udXNlcklkKSB7CiAgICAgICAgZXhhbXBsZS5vcmVkQ3JpdGVyaWFbMF0uY3JpdGVyaWEucHVzaCh7CiAgICAgICAgICBjb25kaXRpb246ICJ1c2VyX2lkIExJS0UiLAogICAgICAgICAgdmFsdWU6IGAlJHt0aGlzLnNlYXJjaEZvcm0udXNlcklkfSVgLAogICAgICAgICAgc2luZ2xlVmFsdWU6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2VhcmNoRm9ybS5jb250YWN0VXNlcklkKSB7CiAgICAgICAgZXhhbXBsZS5vcmVkQ3JpdGVyaWFbMF0uY3JpdGVyaWEucHVzaCh7CiAgICAgICAgICBjb25kaXRpb246ICJjb250YWN0X3VzZXJfaWQgTElLRSIsCiAgICAgICAgICB2YWx1ZTogYCUke3RoaXMuc2VhcmNoRm9ybS5jb250YWN0VXNlcklkfSVgLAogICAgICAgICAgc2luZ2xlVmFsdWU6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2VhcmNoRm9ybS5jb250YWN0UGhvbmUpIHsKICAgICAgICBleGFtcGxlLm9yZWRDcml0ZXJpYVswXS5jcml0ZXJpYS5wdXNoKHsKICAgICAgICAgIGNvbmRpdGlvbjogImNvbnRhY3RfcGhvbmUgTElLRSIsCiAgICAgICAgICB2YWx1ZTogYCUke3RoaXMuc2VhcmNoRm9ybS5jb250YWN0UGhvbmV9JWAsCiAgICAgICAgICBzaW5nbGVWYWx1ZTogdHJ1ZQogICAgICAgIH0pOwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgVXNlckNvbnRhY3RBUEkuZ2V0Q29udGFjdHMoZXhhbXBsZSk7CiAgICAgICAgdGhpcy5jb250YWN0cyA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIGNvbnN0IGNvdW50UmVzcG9uc2UgPSBhd2FpdCBVc2VyQ29udGFjdEFQSS5jb3VudENvbnRhY3RzKGV4YW1wbGUpOwogICAgICAgIHRoaXMudG90YWxSZWNvcmRzID0gY291bnRSZXNwb25zZS5kYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluiBlOezu+S6uuWksei0pScsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIHJlc2V0U2VhcmNoKCkgewogICAgICB0aGlzLnNlYXJjaEZvcm0gPSB7IHVzZXJJZDogJycsIGNvbnRhY3RVc2VySWQ6ICcnLCBjb250YWN0UGhvbmU6ICcnIH07CiAgICAgIHRoaXMuZmV0Y2hDb250YWN0cygpOwogICAgfSwKICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZShzZWxlY3Rpb24pIHsKICAgICAgdGhpcy5zZWxlY3RlZENvbnRhY3RzID0gc2VsZWN0aW9uLm1hcChjb250YWN0ID0+IGNvbnRhY3QuaWQpOwogICAgfSwKICAgIGhhbmRsZUFkZCgpIHsKICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpOwogICAgICB0aGlzLmNvbnRhY3QgPSB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgdXNlcklkOiAnJywKICAgICAgICBjb250YWN0VXNlcklkOiAnJywKICAgICAgICBjb250YWN0UGhvbmU6ICcnLAogICAgICAgIHJlbGF0aW9uc2hpcDogJycsCiAgICAgICAgY3JlYXRlZEF0OiBub3csCiAgICAgICAgdXBkYXRlZEF0OiAnJwogICAgICB9OwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZUVkaXQoY29udGFjdCkgewogICAgICB0aGlzLmNvbnRhY3QgPSB7IC4uLmNvbnRhY3QgfTsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBhc3luYyBzdWJtaXRGb3JtKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTsKICAgICAgICB0aGlzLmNvbnRhY3QudXBkYXRlZEF0ID0gbm93OwoKICAgICAgICBpZiAodGhpcy5jb250YWN0LmlkKSB7CiAgICAgICAgICBhd2FpdCBVc2VyQ29udGFjdEFQSS51cGRhdGVDb250YWN0KHRoaXMuY29udGFjdCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGF3YWl0IFVzZXJDb250YWN0QVBJLmFkZENvbnRhY3QodGhpcy5jb250YWN0KTsKICAgICAgICB9CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfogZTns7vkurrkv6Hmga/kv53lrZjmiJDlip8nKTsKICAgICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgICAgICB0aGlzLmZldGNoQ29udGFjdHMoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfkv53lrZjogZTns7vkurrkv6Hmga/lpLHotKUnLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBoYW5kbGVEZWxldGUoaWQpIHsKICAgICAgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB5Yig6Zmk6K+l6IGU57O75Lq65ZCX77yfJywgJ+itpuWRiicsIHsKICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponCiAgICAgIH0pCiAgICAgICAgLnRoZW4oYXN5bmMgKCkgPT4gewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgYXdhaXQgVXNlckNvbnRhY3RBUEkuZGVsZXRlQ29udGFjdEJ5SWQoaWQpOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOwogICAgICAgICAgICB0aGlzLmZldGNoQ29udGFjdHMoKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+WIoOmZpOWksei0pScsIGVycm9yKTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5aSx6LSlJyk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCflt7Llj5bmtojliKDpmaQnKTsKICAgICAgICB9KTsKICAgIH0sCgogICAgY29uZmlybUJhdGNoRGVsZXRlKCkgewogICAgICBpZiAodGhpcy5zZWxlY3RlZENvbnRhY3RzLmxlbmd0aCA9PT0gMCkgcmV0dXJuOwogICAgICB0aGlzLiRjb25maXJtKCfnoa7lrpropoHliKDpmaTpgInkuK3nmoTogZTns7vkurrlkJfvvJ8nLCAn6K2m5ZGKJywgewogICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicKICAgICAgfSkKICAgICAgICAudGhlbigoKSA9PiB0aGlzLmhhbmRsZUJhdGNoRGVsZXRlKCkpICAvLyDnoa7orqTlkI7miafooYzliKDpmaQKICAgICAgICAuY2F0Y2goKCkgPT4geyB9KTsgIC8vIOWPlua2iOaXtuS4jeWBmuS7u+S9leS6i+aDhQogICAgfSwKCiAgICBhc3luYyBoYW5kbGVCYXRjaERlbGV0ZSgpIHsKICAgICAgdHJ5IHsKICAgICAgICAvLyDmiafooYzmibnph4/liKDpmaQKICAgICAgICBhd2FpdCBQcm9taXNlLmFsbCh0aGlzLnNlbGVjdGVkQ29udGFjdHMubWFwKGlkID0+IFVzZXJDb250YWN0QVBJLmRlbGV0ZUNvbnRhY3RCeUlkKGlkKSkpOwogICAgICAgIHRoaXMuZmV0Y2hDb250YWN0cygpOyAgLy8g5Yi35paw6IGU57O75Lq65YiX6KGoCiAgICAgICAgdGhpcy5zZWxlY3RlZENvbnRhY3RzID0gW107ICAvLyDmuIXnqbrpgInkuK3nmoTogZTns7vkuroKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aJuemHj+WIoOmZpOaIkOWKnycpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+aJuemHj+WIoOmZpOWksei0pScsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmibnph4/liKDpmaTlpLHotKUnKTsKICAgICAgfQogICAgfSwKICAgIGNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgIH0sCiAgICBmb3JtYXREYXRlKGRhdGUpIHsKICAgICAgcmV0dXJuIGRhdGUgPyBuZXcgRGF0ZShkYXRlKS50b0xvY2FsZVN0cmluZygpIDogIuaXoCI7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA0EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Usercontact","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n      <el-form-item label=\"用户ID\">\n        <el-input v-model=\"searchForm.userId\" placeholder=\"请输入用户ID\" clearable />\n      </el-form-item>\n      <el-form-item label=\"联系人用户ID\">\n        <el-input v-model=\"searchForm.contactUserId\" placeholder=\"请输入联系人用户ID\" clearable />\n      </el-form-item>\n      <el-form-item label=\"联系电话\">\n        <el-input v-model=\"searchForm.contactPhone\" placeholder=\"请输入联系电话\" clearable />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"fetchContacts\">查询</el-button>\n        <el-button @click=\"resetSearch\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮和记录数显示 -->\n    <el-row class=\"action-row\" type=\"flex\" justify=\"space-between\" align=\"middle\">\n      <el-col :span=\"8\">\n        <el-button type=\"primary\" @click=\"handleAdd\">添加用户</el-button>\n        <el-button type=\"danger\" @click=\"confirmBatchDelete\" :disabled=\"selectedContacts.length === 0\">批量删除</el-button>\n      </el-col>\n      <el-col :span=\"8\" class=\"record-count\" style=\"text-align: right;\">\n        <span>当前共有 {{ totalRecords }} 条记录</span>\n      </el-col>\n    </el-row>\n\n    <el-table :data=\"contacts\" border @selection-change=\"handleSelectionChange\" :empty-text=\"'没有数据'\">\n      <el-table-column type=\"selection\" width=\"55\" />\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n      <el-table-column prop=\"userId\" label=\"用户ID\" width=\"100\" />\n      <el-table-column prop=\"contactUserId\" label=\"联系人用户ID\" width=\"120\" />\n      <el-table-column prop=\"contactPhone\" label=\"联系电话\" width=\"140\" />\n      <el-table-column prop=\"relationship\" label=\"关系\" width=\"120\" />\n      <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"290\">\n        <template slot-scope=\"scope\">{{ formatDate(scope.row.createdAt) }}</template>\n      </el-table-column>\n      <el-table-column prop=\"updatedAt\" label=\"更新时间\" width=\"290\">\n        <template slot-scope=\"scope\">{{ formatDate(scope.row.updatedAt) }}</template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"160\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"紧急联系人信息\" width=\"600px\">\n      <el-form ref=\"contactForm\" :model=\"contact\" label-width=\"100px\">\n        <el-form-item label=\"用户ID\">\n          <el-input v-model=\"contact.userId\" />\n        </el-form-item>\n        <el-form-item label=\"联系人用户ID\">\n          <el-input v-model=\"contact.contactUserId\" />\n        </el-form-item>\n        <el-form-item label=\"联系电话\">\n          <el-input v-model=\"contact.contactPhone\" />\n        </el-form-item>\n        <el-form-item label=\"关系\">\n          <el-input v-model=\"contact.relationship\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n          <el-button @click=\"closeDialog\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport UserContactAPI from '@/api/usercontact_api';\n\nexport default {\n  data() {\n    return {\n      contacts: [],\n      totalRecords: 0,\n      selectedContacts: [],\n      searchForm: {\n        userId: '',\n        contactUserId: '',\n        contactPhone: ''\n      },\n      dialogVisible: false,\n      contact: {\n        id: null,\n        userId: '',\n        contactUserId: '',\n        contactPhone: '',\n        relationship: '',\n        createdAt: '',\n        updatedAt: ''\n      }\n    };\n  },\n  created() {\n    this.fetchContacts();\n  },\n  methods: {\n    async fetchContacts() {\n      const example = {\n        oredCriteria: [{ criteria: [] }]\n      };\n\n      if (this.searchForm.userId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"user_id LIKE\",\n          value: `%${this.searchForm.userId}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.contactUserId) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"contact_user_id LIKE\",\n          value: `%${this.searchForm.contactUserId}%`,\n          singleValue: true\n        });\n      }\n\n      if (this.searchForm.contactPhone) {\n        example.oredCriteria[0].criteria.push({\n          condition: \"contact_phone LIKE\",\n          value: `%${this.searchForm.contactPhone}%`,\n          singleValue: true\n        });\n      }\n\n      try {\n        const response = await UserContactAPI.getContacts(example);\n        this.contacts = response.data;\n\n        const countResponse = await UserContactAPI.countContacts(example);\n        this.totalRecords = countResponse.data;\n      } catch (error) {\n        console.error('获取联系人失败', error);\n      }\n    },\n    resetSearch() {\n      this.searchForm = { userId: '', contactUserId: '', contactPhone: '' };\n      this.fetchContacts();\n    },\n    handleSelectionChange(selection) {\n      this.selectedContacts = selection.map(contact => contact.id);\n    },\n    handleAdd() {\n      const now = new Date().toISOString();\n      this.contact = {\n        id: null,\n        userId: '',\n        contactUserId: '',\n        contactPhone: '',\n        relationship: '',\n        createdAt: now,\n        updatedAt: ''\n      };\n      this.dialogVisible = true;\n    },\n    handleEdit(contact) {\n      this.contact = { ...contact };\n      this.dialogVisible = true;\n    },\n    async submitForm() {\n      try {\n        const now = new Date().toISOString();\n        this.contact.updatedAt = now;\n\n        if (this.contact.id) {\n          await UserContactAPI.updateContact(this.contact);\n        } else {\n          await UserContactAPI.addContact(this.contact);\n        }\n        this.$message.success('联系人信息保存成功');\n        this.dialogVisible = false;\n        this.fetchContacts();\n      } catch (error) {\n        console.error('保存联系人信息失败', error);\n      }\n    },\n    async handleDelete(id) {\n      this.$confirm('确定要删除该联系人吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      })\n        .then(async () => {\n          try {\n            await UserContactAPI.deleteContactById(id);\n            this.$message.success('删除成功');\n            this.fetchContacts();\n          } catch (error) {\n            console.error('删除失败', error);\n            this.$message.error('删除失败');\n          }\n        })\n        .catch(() => {\n          this.$message.info('已取消删除');\n        });\n    },\n\n    confirmBatchDelete() {\n      if (this.selectedContacts.length === 0) return;\n      this.$confirm('确定要删除选中的联系人吗？', '警告', {\n        type: 'warning',\n        cancelButtonText: '取消',\n        confirmButtonText: '确定'\n      })\n        .then(() => this.handleBatchDelete())  // 确认后执行删除\n        .catch(() => { });  // 取消时不做任何事情\n    },\n\n    async handleBatchDelete() {\n      try {\n        // 执行批量删除\n        await Promise.all(this.selectedContacts.map(id => UserContactAPI.deleteContactById(id)));\n        this.fetchContacts();  // 刷新联系人列表\n        this.selectedContacts = [];  // 清空选中的联系人\n        this.$message.success('批量删除成功');\n      } catch (error) {\n        console.error('批量删除失败', error);\n        this.$message.error('批量删除失败');\n      }\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n    },\n    formatDate(date) {\n      return date ? new Date(date).toLocaleString() : \"无\";\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin-right: 5px;\n}\n\n.search-form {\n  margin-bottom: 0px;\n}\n\n.add-user-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.record-count {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #606266;\n}\n</style>\n"]}]}